// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		00E356F31AD99517003FC87E /* invia_mwalletTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* invia_mwalletTests.m */; };
		0914241F270437FA00038070 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		09142420270437FA00038070 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		09142423270437FA00038070 /* CloudKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 09BACE1126945E1A00CD61DD /* CloudKit.framework */; };
		09142425270437FA00038070 /* GoogleService_Suncorp-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E026652FD500CCCF84 /* GoogleService_Suncorp-Info.plist */; };
		09142426270437FA00038070 /* LaunchScreen_Amway.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B08352669DAE300873D2D /* LaunchScreen_Amway.storyboard */; };
		09142427270437FA00038070 /* Graphik-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BA2642E46E00BC9694 /* Graphik-Medium.ttf */; };
		09142428270437FA00038070 /* Cubano.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A5635AB26544730002C5A7C /* Cubano.ttf */; };
		09142429270437FA00038070 /* Graphik-Semibold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BB2642E46E00BC9694 /* Graphik-Semibold.ttf */; };
		0914242A270437FA00038070 /* GoogleService_Release-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA5313B2644558200E814C9 /* GoogleService_Release-Info.plist */; };
		0914242B270437FA00038070 /* Graphik-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0B42642D0F800BC9694 /* Graphik-Regular.ttf */; };
		0914242C270437FA00038070 /* MarkOT-Heavy.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730776255D7B0500B45110 /* MarkOT-Heavy.ttf */; };
		0914242D270437FA00038070 /* MarkOT-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730774255D7B0500B45110 /* MarkOT-Medium.ttf */; };
		0914242E270437FA00038070 /* LaunchScreen_Optus.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8C26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard */; };
		0914242F270437FA00038070 /* LaunchScreen_Dev1.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9F26400F6E002AD85E /* LaunchScreen_Dev1.storyboard */; };
		09142430270437FA00038070 /* LaunchScreen_Invia_Release.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8326AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard */; };
		09142431270437FA00038070 /* GoogleService_Invia-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E82665378C00CCCF84 /* GoogleService_Invia-Info.plist */; };
		09142432270437FA00038070 /* GoogleService_Amway-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B082C2669D62E00873D2D /* GoogleService_Amway-Info.plist */; };
		09142433270437FA00038070 /* MarkOT.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730775255D7B0500B45110 /* MarkOT.ttf */; };
		09142434270437FA00038070 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		09142435270437FA00038070 /* LaunchScreen_Suncorp.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0298C265F72250008FE72 /* LaunchScreen_Suncorp.storyboard */; };
		09142436270437FA00038070 /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0930E76126B3AC6500F8C0AA /* GoogleService-Info.plist */; };
		09142437270437FA00038070 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		09142438270437FA00038070 /* Arial-BoldMT.otf in Resources */ = {isa = PBXBuildFile; fileRef = 20F0460E745B4F17B1B6E28D /* Arial-BoldMT.otf */; };
		09142439270437FA00038070 /* ARIAL.TTF in Resources */ = {isa = PBXBuildFile; fileRef = 6C98689CA87042E1AA8FE4BF /* ARIAL.TTF */; };
		0914243A270437FA00038070 /* GoogleService_Invia_old-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9A26400C5A002AD85E /* GoogleService_Invia_old-Info.plist */; };
		0914243B270437FA00038070 /* ArialMTStd-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 917FAF08E5B1486ABD6C9ECC /* ArialMTStd-Medium.otf */; };
		0914243C270437FA00038070 /* GoogleService_Voda-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AC3DC8F2556BF50009B2ACD /* GoogleService_Voda-Info.plist */; };
		0930E76226B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0930E76126B3AC6500F8C0AA /* GoogleService-Info.plist */; };
		0930E76326B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0930E76126B3AC6500F8C0AA /* GoogleService-Info.plist */; };
		0930E76426B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0930E76126B3AC6500F8C0AA /* GoogleService-Info.plist */; };
		0930E76526B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0930E76126B3AC6500F8C0AA /* GoogleService-Info.plist */; };
		0930E76626B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0930E76126B3AC6500F8C0AA /* GoogleService-Info.plist */; };
		0930E76726B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0930E76126B3AC6500F8C0AA /* GoogleService-Info.plist */; };
		0930E76826B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0930E76126B3AC6500F8C0AA /* GoogleService-Info.plist */; };
		0930E76926B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0930E76126B3AC6500F8C0AA /* GoogleService-Info.plist */; };
		093DE624270572D4005B4E74 /* libPods-invia_mwallet_CCS_Prod.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 093DE623270572D4005B4E74 /* libPods-invia_mwallet_CCS_Prod.a */; };
		09517791270445AD00E42BAF /* CloudKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 09BACE1126945E1A00CD61DD /* CloudKit.framework */; };
		0951779D2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0951779C2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist */; };
		0951779E2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0951779C2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist */; };
		0951779F2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0951779C2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist */; };
		095177A02704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0951779C2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist */; };
		095177A12704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0951779C2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist */; };
		095177A22704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0951779C2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist */; };
		095177A32704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0951779C2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist */; };
		095177A42704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0951779C2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist */; };
		095177A52704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 0951779C2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist */; };
		09BACE1226945E1A00CD61DD /* CloudKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 09BACE1126945E1A00CD61DD /* CloudKit.framework */; };
		09ED8C8426AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8326AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard */; };
		09ED8C8526AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8326AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard */; };
		09ED8C8626AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8326AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard */; };
		09ED8C8726AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8326AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard */; };
		09ED8C8826AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8326AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard */; };
		09ED8C8926AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8326AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard */; };
		09ED8C8A26AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8326AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard */; };
		09ED8C8B26AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8326AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard */; };
		09ED8C8D26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8C26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard */; };
		09ED8C8E26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8C26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard */; };
		09ED8C8F26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8C26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard */; };
		09ED8C9026AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8C26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard */; };
		09ED8C9126AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8C26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard */; };
		09ED8C9226AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8C26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard */; };
		09ED8C9326AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8C26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard */; };
		09ED8C9426AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 09ED8C8C26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard */; };
		0C480A85936D4428A34DB2F1 /* ARIAL.TTF in Resources */ = {isa = PBXBuildFile; fileRef = 6C98689CA87042E1AA8FE4BF /* ARIAL.TTF */; };
		1054F470CD67EDF480A44492 /* libPods-invia_mwallet_CCS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 29A56D7CCC48BA9D6D714650 /* libPods-invia_mwallet_CCS.a */; };
		13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		13B07FC11A68108700A75B9A /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		15349965DC0EC08361A36DC7 /* libPods-invia_mwallet-tvOS.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 6F609A3D107DE476A1DE4336 /* libPods-invia_mwallet-tvOS.a */; };
		1753670FC8126ADB8DBA5CF2 /* libPods-invia_mwallet_Release.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 0550C233B9709E52FF61EB5D /* libPods-invia_mwallet_Release.a */; };
		2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		2DCD954D1E0B4F2C00145EB5 /* invia_mwalletTests.m in Sources */ = {isa = PBXBuildFile; fileRef = 00E356F21AD99517003FC87E /* invia_mwalletTests.m */; };
		35A47B3BE1CDF4FBC1ECD305 /* libPods-invia_mwallet_Invia.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 440DA2BC0DF5DD1D747DBA0A /* libPods-invia_mwallet_Invia.a */; };
		3A4B08092669D44500873D2D /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		3A4B080A2669D44500873D2D /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		3A4B080E2669D44500873D2D /* GoogleService_Suncorp-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E026652FD500CCCF84 /* GoogleService_Suncorp-Info.plist */; };
		3A4B080F2669D44500873D2D /* MarkOT-Heavy.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730776255D7B0500B45110 /* MarkOT-Heavy.ttf */; };
		3A4B08102669D44500873D2D /* Cubano.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A5635AB26544730002C5A7C /* Cubano.ttf */; };
		3A4B08112669D44500873D2D /* MarkOT-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730774255D7B0500B45110 /* MarkOT-Medium.ttf */; };
		3A4B08122669D44500873D2D /* GoogleService_Release-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA5313B2644558200E814C9 /* GoogleService_Release-Info.plist */; };
		3A4B08132669D44500873D2D /* LaunchScreen_Dev1.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9F26400F6E002AD85E /* LaunchScreen_Dev1.storyboard */; };
		3A4B08142669D44500873D2D /* MarkOT.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730775255D7B0500B45110 /* MarkOT.ttf */; };
		3A4B08152669D44500873D2D /* Graphik-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BA2642E46E00BC9694 /* Graphik-Medium.ttf */; };
		3A4B08162669D44500873D2D /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		3A4B08172669D44500873D2D /* GoogleService_Invia-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E82665378C00CCCF84 /* GoogleService_Invia-Info.plist */; };
		3A4B08182669D44500873D2D /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		3A4B08192669D44500873D2D /* Arial-BoldMT.otf in Resources */ = {isa = PBXBuildFile; fileRef = 20F0460E745B4F17B1B6E28D /* Arial-BoldMT.otf */; };
		3A4B081B2669D44500873D2D /* LaunchScreen_Suncorp.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0298C265F72250008FE72 /* LaunchScreen_Suncorp.storyboard */; };
		3A4B081C2669D44500873D2D /* Graphik-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0B42642D0F800BC9694 /* Graphik-Regular.ttf */; };
		3A4B081D2669D44500873D2D /* ARIAL.TTF in Resources */ = {isa = PBXBuildFile; fileRef = 6C98689CA87042E1AA8FE4BF /* ARIAL.TTF */; };
		3A4B081E2669D44500873D2D /* Graphik-Semibold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BB2642E46E00BC9694 /* Graphik-Semibold.ttf */; };
		3A4B081F2669D44500873D2D /* GoogleService_Invia_old-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9A26400C5A002AD85E /* GoogleService_Invia_old-Info.plist */; };
		3A4B08202669D44500873D2D /* ArialMTStd-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 917FAF08E5B1486ABD6C9ECC /* ArialMTStd-Medium.otf */; };
		3A4B08212669D44500873D2D /* GoogleService_Voda-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AC3DC8F2556BF50009B2ACD /* GoogleService_Voda-Info.plist */; };
		3A4B082D2669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B082C2669D62E00873D2D /* GoogleService_Amway-Info.plist */; };
		3A4B082E2669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B082C2669D62E00873D2D /* GoogleService_Amway-Info.plist */; };
		3A4B082F2669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B082C2669D62E00873D2D /* GoogleService_Amway-Info.plist */; };
		3A4B08302669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B082C2669D62E00873D2D /* GoogleService_Amway-Info.plist */; };
		3A4B08312669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B082C2669D62E00873D2D /* GoogleService_Amway-Info.plist */; };
		3A4B08322669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B082C2669D62E00873D2D /* GoogleService_Amway-Info.plist */; };
		3A4B08332669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B082C2669D62E00873D2D /* GoogleService_Amway-Info.plist */; };
		3A4B08342669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B082C2669D62E00873D2D /* GoogleService_Amway-Info.plist */; };
		3A4B08362669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B08352669DAE300873D2D /* LaunchScreen_Amway.storyboard */; };
		3A4B08372669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B08352669DAE300873D2D /* LaunchScreen_Amway.storyboard */; };
		3A4B08382669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B08352669DAE300873D2D /* LaunchScreen_Amway.storyboard */; };
		3A4B08392669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B08352669DAE300873D2D /* LaunchScreen_Amway.storyboard */; };
		3A4B083A2669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B08352669DAE300873D2D /* LaunchScreen_Amway.storyboard */; };
		3A4B083B2669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B08352669DAE300873D2D /* LaunchScreen_Amway.storyboard */; };
		3A4B083C2669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B08352669DAE300873D2D /* LaunchScreen_Amway.storyboard */; };
		3A4B083D2669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3A4B08352669DAE300873D2D /* LaunchScreen_Amway.storyboard */; };
		3A5635AC26544731002C5A7C /* Cubano.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A5635AB26544730002C5A7C /* Cubano.ttf */; };
		3A5635AD26544731002C5A7C /* Cubano.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A5635AB26544730002C5A7C /* Cubano.ttf */; };
		3A5635AE26544731002C5A7C /* Cubano.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A5635AB26544730002C5A7C /* Cubano.ttf */; };
		3A5635AF26544731002C5A7C /* Cubano.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A5635AB26544730002C5A7C /* Cubano.ttf */; };
		3A5635B026544731002C5A7C /* Cubano.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A5635AB26544730002C5A7C /* Cubano.ttf */; };
		3A730777255D7F4000B45110 /* MarkOT-Heavy.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730776255D7B0500B45110 /* MarkOT-Heavy.ttf */; };
		3A730778255D7F4000B45110 /* MarkOT-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730774255D7B0500B45110 /* MarkOT-Medium.ttf */; };
		3A730779255D7F4000B45110 /* MarkOT.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730775255D7B0500B45110 /* MarkOT.ttf */; };
		3AA5311E2644545900E814C9 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		3AA5311F2644545900E814C9 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		3AA531232644545900E814C9 /* MarkOT-Heavy.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730776255D7B0500B45110 /* MarkOT-Heavy.ttf */; };
		3AA531242644545900E814C9 /* MarkOT-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730774255D7B0500B45110 /* MarkOT-Medium.ttf */; };
		3AA531252644545900E814C9 /* LaunchScreen_Dev1.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9F26400F6E002AD85E /* LaunchScreen_Dev1.storyboard */; };
		3AA531262644545900E814C9 /* MarkOT.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730775255D7B0500B45110 /* MarkOT.ttf */; };
		3AA531272644545900E814C9 /* Graphik-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BA2642E46E00BC9694 /* Graphik-Medium.ttf */; };
		3AA531282644545900E814C9 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		3AA531292644545900E814C9 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		3AA5312A2644545900E814C9 /* Arial-BoldMT.otf in Resources */ = {isa = PBXBuildFile; fileRef = 20F0460E745B4F17B1B6E28D /* Arial-BoldMT.otf */; };
		3AA5312B2644545900E814C9 /* Graphik-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0B42642D0F800BC9694 /* Graphik-Regular.ttf */; };
		3AA5312C2644545900E814C9 /* ARIAL.TTF in Resources */ = {isa = PBXBuildFile; fileRef = 6C98689CA87042E1AA8FE4BF /* ARIAL.TTF */; };
		3AA5312E2644545900E814C9 /* Graphik-Semibold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BB2642E46E00BC9694 /* Graphik-Semibold.ttf */; };
		3AA5312F2644545900E814C9 /* GoogleService_Invia_old-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9A26400C5A002AD85E /* GoogleService_Invia_old-Info.plist */; };
		3AA531302644545900E814C9 /* ArialMTStd-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 917FAF08E5B1486ABD6C9ECC /* ArialMTStd-Medium.otf */; };
		3AA531312644545900E814C9 /* GoogleService_Voda-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AC3DC8F2556BF50009B2ACD /* GoogleService_Voda-Info.plist */; };
		3AA5313C2644558200E814C9 /* GoogleService_Release-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA5313B2644558200E814C9 /* GoogleService_Release-Info.plist */; };
		3AA5313D2644558200E814C9 /* GoogleService_Release-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA5313B2644558200E814C9 /* GoogleService_Release-Info.plist */; };
		3AA5313E2644558200E814C9 /* GoogleService_Release-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA5313B2644558200E814C9 /* GoogleService_Release-Info.plist */; };
		3AA5313F2644558200E814C9 /* GoogleService_Release-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA5313B2644558200E814C9 /* GoogleService_Release-Info.plist */; };
		3AA531402644558200E814C9 /* GoogleService_Release-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA5313B2644558200E814C9 /* GoogleService_Release-Info.plist */; };
		3AA77E9B26400C5A002AD85E /* GoogleService_Invia_old-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9A26400C5A002AD85E /* GoogleService_Invia_old-Info.plist */; };
		3AA77E9C26400C5A002AD85E /* GoogleService_Invia_old-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9A26400C5A002AD85E /* GoogleService_Invia_old-Info.plist */; };
		3AA77E9D26400C5A002AD85E /* GoogleService_Invia_old-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9A26400C5A002AD85E /* GoogleService_Invia_old-Info.plist */; };
		3AA77E9E26400C5A002AD85E /* GoogleService_Invia_old-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9A26400C5A002AD85E /* GoogleService_Invia_old-Info.plist */; };
		3AA77EA026400F6E002AD85E /* LaunchScreen_Dev1.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9F26400F6E002AD85E /* LaunchScreen_Dev1.storyboard */; };
		3AA77EA126400F6E002AD85E /* LaunchScreen_Dev1.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9F26400F6E002AD85E /* LaunchScreen_Dev1.storyboard */; };
		3AA77EA226400F6E002AD85E /* LaunchScreen_Dev1.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9F26400F6E002AD85E /* LaunchScreen_Dev1.storyboard */; };
		3AA77EA326400F6E002AD85E /* LaunchScreen_Dev1.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9F26400F6E002AD85E /* LaunchScreen_Dev1.storyboard */; };
		3AC02948265F63D40008FE72 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		3AC02949265F63D40008FE72 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		3AC0294D265F63D40008FE72 /* MarkOT-Heavy.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730776255D7B0500B45110 /* MarkOT-Heavy.ttf */; };
		3AC0294E265F63D40008FE72 /* Cubano.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A5635AB26544730002C5A7C /* Cubano.ttf */; };
		3AC0294F265F63D40008FE72 /* MarkOT-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730774255D7B0500B45110 /* MarkOT-Medium.ttf */; };
		3AC02950265F63D40008FE72 /* GoogleService_Release-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA5313B2644558200E814C9 /* GoogleService_Release-Info.plist */; };
		3AC02951265F63D40008FE72 /* LaunchScreen_Dev1.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9F26400F6E002AD85E /* LaunchScreen_Dev1.storyboard */; };
		3AC02952265F63D40008FE72 /* MarkOT.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730775255D7B0500B45110 /* MarkOT.ttf */; };
		3AC02953265F63D40008FE72 /* Graphik-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BA2642E46E00BC9694 /* Graphik-Medium.ttf */; };
		3AC02954265F63D40008FE72 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		3AC02955265F63D40008FE72 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		3AC02956265F63D40008FE72 /* Arial-BoldMT.otf in Resources */ = {isa = PBXBuildFile; fileRef = 20F0460E745B4F17B1B6E28D /* Arial-BoldMT.otf */; };
		3AC02958265F63D40008FE72 /* Graphik-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0B42642D0F800BC9694 /* Graphik-Regular.ttf */; };
		3AC02959265F63D40008FE72 /* ARIAL.TTF in Resources */ = {isa = PBXBuildFile; fileRef = 6C98689CA87042E1AA8FE4BF /* ARIAL.TTF */; };
		3AC0295A265F63D40008FE72 /* Graphik-Semibold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BB2642E46E00BC9694 /* Graphik-Semibold.ttf */; };
		3AC0295B265F63D40008FE72 /* GoogleService_Invia_old-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9A26400C5A002AD85E /* GoogleService_Invia_old-Info.plist */; };
		3AC0295C265F63D40008FE72 /* ArialMTStd-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 917FAF08E5B1486ABD6C9ECC /* ArialMTStd-Medium.otf */; };
		3AC0295D265F63D40008FE72 /* GoogleService_Voda-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AC3DC8F2556BF50009B2ACD /* GoogleService_Voda-Info.plist */; };
		3AC0296C265F63F30008FE72 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		3AC0296D265F63F30008FE72 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		3AC02971265F63F30008FE72 /* MarkOT-Heavy.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730776255D7B0500B45110 /* MarkOT-Heavy.ttf */; };
		3AC02972265F63F30008FE72 /* Cubano.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A5635AB26544730002C5A7C /* Cubano.ttf */; };
		3AC02973265F63F30008FE72 /* MarkOT-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730774255D7B0500B45110 /* MarkOT-Medium.ttf */; };
		3AC02974265F63F30008FE72 /* GoogleService_Release-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA5313B2644558200E814C9 /* GoogleService_Release-Info.plist */; };
		3AC02975265F63F30008FE72 /* LaunchScreen_Dev1.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9F26400F6E002AD85E /* LaunchScreen_Dev1.storyboard */; };
		3AC02976265F63F30008FE72 /* MarkOT.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730775255D7B0500B45110 /* MarkOT.ttf */; };
		3AC02977265F63F30008FE72 /* Graphik-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BA2642E46E00BC9694 /* Graphik-Medium.ttf */; };
		3AC02978265F63F30008FE72 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		3AC02979265F63F30008FE72 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		3AC0297A265F63F30008FE72 /* Arial-BoldMT.otf in Resources */ = {isa = PBXBuildFile; fileRef = 20F0460E745B4F17B1B6E28D /* Arial-BoldMT.otf */; };
		3AC0297C265F63F30008FE72 /* Graphik-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0B42642D0F800BC9694 /* Graphik-Regular.ttf */; };
		3AC0297D265F63F30008FE72 /* ARIAL.TTF in Resources */ = {isa = PBXBuildFile; fileRef = 6C98689CA87042E1AA8FE4BF /* ARIAL.TTF */; };
		3AC0297E265F63F30008FE72 /* Graphik-Semibold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BB2642E46E00BC9694 /* Graphik-Semibold.ttf */; };
		3AC0297F265F63F30008FE72 /* GoogleService_Invia_old-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AA77E9A26400C5A002AD85E /* GoogleService_Invia_old-Info.plist */; };
		3AC02980265F63F30008FE72 /* ArialMTStd-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 917FAF08E5B1486ABD6C9ECC /* ArialMTStd-Medium.otf */; };
		3AC02981265F63F30008FE72 /* GoogleService_Voda-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AC3DC8F2556BF50009B2ACD /* GoogleService_Voda-Info.plist */; };
		3AC0298D265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0298C265F72250008FE72 /* LaunchScreen_Suncorp.storyboard */; };
		3AC0298E265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0298C265F72250008FE72 /* LaunchScreen_Suncorp.storyboard */; };
		3AC0298F265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0298C265F72250008FE72 /* LaunchScreen_Suncorp.storyboard */; };
		3AC02990265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0298C265F72250008FE72 /* LaunchScreen_Suncorp.storyboard */; };
		3AC02991265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0298C265F72250008FE72 /* LaunchScreen_Suncorp.storyboard */; };
		3AC02992265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0298C265F72250008FE72 /* LaunchScreen_Suncorp.storyboard */; };
		3AC02993265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0298C265F72250008FE72 /* LaunchScreen_Suncorp.storyboard */; };
		3AC0F0B52642D0F800BC9694 /* Graphik-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0B42642D0F800BC9694 /* Graphik-Regular.ttf */; };
		3AC0F0B62642D0F800BC9694 /* Graphik-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0B42642D0F800BC9694 /* Graphik-Regular.ttf */; };
		3AC0F0B72642D0F800BC9694 /* Graphik-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0B42642D0F800BC9694 /* Graphik-Regular.ttf */; };
		3AC0F0B82642D0F800BC9694 /* Graphik-Regular.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0B42642D0F800BC9694 /* Graphik-Regular.ttf */; };
		3AC0F0BC2642E46F00BC9694 /* Graphik-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BA2642E46E00BC9694 /* Graphik-Medium.ttf */; };
		3AC0F0BD2642E46F00BC9694 /* Graphik-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BA2642E46E00BC9694 /* Graphik-Medium.ttf */; };
		3AC0F0BE2642E46F00BC9694 /* Graphik-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BA2642E46E00BC9694 /* Graphik-Medium.ttf */; };
		3AC0F0BF2642E46F00BC9694 /* Graphik-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BA2642E46E00BC9694 /* Graphik-Medium.ttf */; };
		3AC0F0C02642E46F00BC9694 /* Graphik-Semibold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BB2642E46E00BC9694 /* Graphik-Semibold.ttf */; };
		3AC0F0C12642E46F00BC9694 /* Graphik-Semibold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BB2642E46E00BC9694 /* Graphik-Semibold.ttf */; };
		3AC0F0C22642E46F00BC9694 /* Graphik-Semibold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BB2642E46E00BC9694 /* Graphik-Semibold.ttf */; };
		3AC0F0C32642E46F00BC9694 /* Graphik-Semibold.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3AC0F0BB2642E46E00BC9694 /* Graphik-Semibold.ttf */; };
		3AC3DC902556BF50009B2ACD /* GoogleService_Voda-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AC3DC8F2556BF50009B2ACD /* GoogleService_Voda-Info.plist */; };
		3AC58FD6263E9EB2009D332B /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		3AC58FD7263E9EB2009D332B /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		3AC58FDB263E9EB2009D332B /* MarkOT-Heavy.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730776255D7B0500B45110 /* MarkOT-Heavy.ttf */; };
		3AC58FDC263E9EB2009D332B /* MarkOT-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730774255D7B0500B45110 /* MarkOT-Medium.ttf */; };
		3AC58FDD263E9EB2009D332B /* MarkOT.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730775255D7B0500B45110 /* MarkOT.ttf */; };
		3AC58FDE263E9EB2009D332B /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		3AC58FDF263E9EB2009D332B /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		3AC58FE0263E9EB2009D332B /* Arial-BoldMT.otf in Resources */ = {isa = PBXBuildFile; fileRef = 20F0460E745B4F17B1B6E28D /* Arial-BoldMT.otf */; };
		3AC58FE1263E9EB2009D332B /* ARIAL.TTF in Resources */ = {isa = PBXBuildFile; fileRef = 6C98689CA87042E1AA8FE4BF /* ARIAL.TTF */; };
		3AC58FE2263E9EB2009D332B /* ArialMTStd-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 917FAF08E5B1486ABD6C9ECC /* ArialMTStd-Medium.otf */; };
		3AC58FE3263E9EB2009D332B /* GoogleService_Voda-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AC3DC8F2556BF50009B2ACD /* GoogleService_Voda-Info.plist */; };
		3ACC65E126652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E026652FD500CCCF84 /* GoogleService_Suncorp-Info.plist */; };
		3ACC65E226652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E026652FD500CCCF84 /* GoogleService_Suncorp-Info.plist */; };
		3ACC65E326652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E026652FD500CCCF84 /* GoogleService_Suncorp-Info.plist */; };
		3ACC65E426652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E026652FD500CCCF84 /* GoogleService_Suncorp-Info.plist */; };
		3ACC65E526652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E026652FD500CCCF84 /* GoogleService_Suncorp-Info.plist */; };
		3ACC65E626652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E026652FD500CCCF84 /* GoogleService_Suncorp-Info.plist */; };
		3ACC65E726652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E026652FD500CCCF84 /* GoogleService_Suncorp-Info.plist */; };
		3ACC65E92665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E82665378C00CCCF84 /* GoogleService_Invia-Info.plist */; };
		3ACC65EA2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E82665378C00CCCF84 /* GoogleService_Invia-Info.plist */; };
		3ACC65EB2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E82665378C00CCCF84 /* GoogleService_Invia-Info.plist */; };
		3ACC65EC2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E82665378C00CCCF84 /* GoogleService_Invia-Info.plist */; };
		3ACC65ED2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E82665378C00CCCF84 /* GoogleService_Invia-Info.plist */; };
		3ACC65EE2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E82665378C00CCCF84 /* GoogleService_Invia-Info.plist */; };
		3ACC65EF2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3ACC65E82665378C00CCCF84 /* GoogleService_Invia-Info.plist */; };
		3AF57C8F263FDF2200C6FC94 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		3AF57C90263FDF2200C6FC94 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		3AF57C95263FDF2200C6FC94 /* MarkOT-Heavy.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730776255D7B0500B45110 /* MarkOT-Heavy.ttf */; };
		3AF57C96263FDF2200C6FC94 /* MarkOT-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730774255D7B0500B45110 /* MarkOT-Medium.ttf */; };
		3AF57C97263FDF2200C6FC94 /* MarkOT.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730775255D7B0500B45110 /* MarkOT.ttf */; };
		3AF57C98263FDF2200C6FC94 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		3AF57C99263FDF2200C6FC94 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		3AF57C9A263FDF2200C6FC94 /* Arial-BoldMT.otf in Resources */ = {isa = PBXBuildFile; fileRef = 20F0460E745B4F17B1B6E28D /* Arial-BoldMT.otf */; };
		3AF57C9B263FDF2200C6FC94 /* ARIAL.TTF in Resources */ = {isa = PBXBuildFile; fileRef = 6C98689CA87042E1AA8FE4BF /* ARIAL.TTF */; };
		3AF57C9C263FDF2200C6FC94 /* ArialMTStd-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 917FAF08E5B1486ABD6C9ECC /* ArialMTStd-Medium.otf */; };
		3AF57C9D263FDF2200C6FC94 /* GoogleService_Voda-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AC3DC8F2556BF50009B2ACD /* GoogleService_Voda-Info.plist */; };
		3AF57CAB263FDFFC00C6FC94 /* AppDelegate.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB01A68108700A75B9A /* AppDelegate.m */; };
		3AF57CAC263FDFFC00C6FC94 /* main.m in Sources */ = {isa = PBXBuildFile; fileRef = 13B07FB71A68108700A75B9A /* main.m */; };
		3AF57CB1263FDFFC00C6FC94 /* MarkOT-Heavy.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730776255D7B0500B45110 /* MarkOT-Heavy.ttf */; };
		3AF57CB2263FDFFC00C6FC94 /* MarkOT-Medium.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730774255D7B0500B45110 /* MarkOT-Medium.ttf */; };
		3AF57CB3263FDFFC00C6FC94 /* MarkOT.ttf in Resources */ = {isa = PBXBuildFile; fileRef = 3A730775255D7B0500B45110 /* MarkOT.ttf */; };
		3AF57CB4263FDFFC00C6FC94 /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		3AF57CB5263FDFFC00C6FC94 /* Images.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 13B07FB51A68108700A75B9A /* Images.xcassets */; };
		3AF57CB6263FDFFC00C6FC94 /* Arial-BoldMT.otf in Resources */ = {isa = PBXBuildFile; fileRef = 20F0460E745B4F17B1B6E28D /* Arial-BoldMT.otf */; };
		3AF57CB7263FDFFC00C6FC94 /* ARIAL.TTF in Resources */ = {isa = PBXBuildFile; fileRef = 6C98689CA87042E1AA8FE4BF /* ARIAL.TTF */; };
		3AF57CB8263FDFFC00C6FC94 /* ArialMTStd-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 917FAF08E5B1486ABD6C9ECC /* ArialMTStd-Medium.otf */; };
		3AF57CB9263FDFFC00C6FC94 /* GoogleService_Voda-Info.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3AC3DC8F2556BF50009B2ACD /* GoogleService_Voda-Info.plist */; };
		47B60F8101C80B580B4A52B9 /* libPods-invia_mwallet_Voda.a in Frameworks */ = {isa = PBXBuildFile; fileRef = E4DACF93FEABF91E4E36F0E6 /* libPods-invia_mwallet_Voda.a */; };
		4AF9AE24472715837BDCADF7 /* libPods-invia_mwallet_CCS_Prod.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 109E0F46141ABC1EB4A370CD /* libPods-invia_mwallet_CCS_Prod.a */; };
		61BB5EC26A87C211C761514E /* libPods-invia_mwallet_Suncorp.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 301F49F4903552A323E7262A /* libPods-invia_mwallet_Suncorp.a */; };
		6790D2A90A54FB7D9E493253 /* libPods-invia_mwallet_ICAI.a in Frameworks */ = {isa = PBXBuildFile; fileRef = EBB93C11C9198AA1BFEDBA2B /* libPods-invia_mwallet_ICAI.a */; };
		6DFF7A90297924A200295F30 /* mycert.cer in Resources */ = {isa = PBXBuildFile; fileRef = 6DFF7A8E2979249800295F30 /* mycert.cer */; };
		6DFF7A91297924A700295F30 /* expcert.cer in Resources */ = {isa = PBXBuildFile; fileRef = 6DFF7A8F2979249800295F30 /* expcert.cer */; };
		6F191E4AB13C4AD8AA2778CF /* Arial-BoldMT.otf in Resources */ = {isa = PBXBuildFile; fileRef = 20F0460E745B4F17B1B6E28D /* Arial-BoldMT.otf */; };
		705A9DAF2199A8C8C1331904 /* (null) in Frameworks */ = {isa = PBXBuildFile; };
		81AB9BB82411601600AC10FF /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */; };
		8631B3EC9CD7F6A23AC66378 /* libPods-invia_mwallet-invia_mwalletTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 9E82300C58DD6AD6F56AC130 /* libPods-invia_mwallet-invia_mwalletTests.a */; };
		9D3B3C737E15521AAEC050F8 /* libPods-invia_mwallet-tvOSTests.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 4A984D241A7D75C02253087E /* libPods-invia_mwallet-tvOSTests.a */; };
		AB7BCF829CA343E487223586 /* ArialMTStd-Medium.otf in Resources */ = {isa = PBXBuildFile; fileRef = 917FAF08E5B1486ABD6C9ECC /* ArialMTStd-Medium.otf */; };
		B2C95FF9576CA697403DBE72 /* libPods-invia_mwallet_Voda.a in Frameworks */ = {isa = PBXBuildFile; fileRef = E4DACF93FEABF91E4E36F0E6 /* libPods-invia_mwallet_Voda.a */; };
		B88EAB731B3392CBBEF93382 /* libPods-invia_mwallet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 95C029A07644DA1A27377E58 /* libPods-invia_mwallet.a */; };
		C156B06CD221CB8C26710C66 /* libPods-invia_mwallet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 95C029A07644DA1A27377E58 /* libPods-invia_mwallet.a */; };
		CF01D48B6E970EA12E77230D /* libPods-invia_mwallet.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 95C029A07644DA1A27377E58 /* libPods-invia_mwallet.a */; };
		E028FCDCF2C3561A4E374C26 /* libPods-invia_mwallet_Amway.a in Frameworks */ = {isa = PBXBuildFile; fileRef = DBE875FDFD0EF84318880ECD /* libPods-invia_mwallet_Amway.a */; };
		FD02F30135A810012E1A1133 /* libPods-invia_mwallet_Invia.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 440DA2BC0DF5DD1D747DBA0A /* libPods-invia_mwallet_Invia.a */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		00E356F41AD99517003FC87E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 13B07F861A680F5B00A75B9A;
			remoteInfo = invia_mwallet;
		};
		2D02E4911E0B4A5D006451C7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 83CBB9F71A601CBA00E9B192 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 2D02E47A1E0B4A5D006451C7;
			remoteInfo = "invia_mwallet-tvOS";
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		008F07F21AC5B25A0029DE68 /* main.jsbundle */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text; path = main.jsbundle; sourceTree = "<group>"; };
		00E356EE1AD99517003FC87E /* invia_mwalletTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = invia_mwalletTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		00E356F11AD99517003FC87E /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		00E356F21AD99517003FC87E /* invia_mwalletTests.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = invia_mwalletTests.m; sourceTree = "<group>"; };
		0550C233B9709E52FF61EB5D /* libPods-invia_mwallet_Release.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet_Release.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		085EE7E48BAC4FB287A4AEC5 /* Feather.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Feather.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Feather.ttf"; sourceTree = "<group>"; };
		09142444270437FA00038070 /* invia_mwallet_CCS_Prod.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = invia_mwallet_CCS_Prod.app; sourceTree = BUILT_PRODUCTS_DIR; };
		09142445270437FA00038070 /* invia_mwallet_CCS_Prod-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "invia_mwallet_CCS_Prod-Info.plist"; path = "/Users/harshamg/Documents/mWallet_Azure/ios/invia_mwallet_CCS_Prod-Info.plist"; sourceTree = "<absolute>"; };
		0930E76126B3AC6500F8C0AA /* GoogleService-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService-Info.plist"; path = "../../../Downloads/GoogleService-Info.plist"; sourceTree = "<group>"; };
		093DE623270572D4005B4E74 /* libPods-invia_mwallet_CCS_Prod.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; path = "libPods-invia_mwallet_CCS_Prod.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		0951779C2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService_CCS_Prod-Info.plist"; sourceTree = "<group>"; };
		09BACE1126945E1A00CD61DD /* CloudKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = CloudKit.framework; path = System/Library/Frameworks/CloudKit.framework; sourceTree = SDKROOT; };
		09ED8C8326AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = LaunchScreen_Invia_Release.storyboard; sourceTree = "<group>"; };
		09ED8C8C26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = LaunchScreen_Optus.storyboard; sourceTree = "<group>"; };
		0F038248446B36A23751AA18 /* Pods-invia_mwallet-tvOSTests.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet-tvOSTests.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet-tvOSTests/Pods-invia_mwallet-tvOSTests.dev.xcconfig"; sourceTree = "<group>"; };
		109E0F46141ABC1EB4A370CD /* libPods-invia_mwallet_CCS_Prod.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet_CCS_Prod.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		10E03C1D29924266BF94FA46 /* SimpleLineIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = SimpleLineIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf"; sourceTree = "<group>"; };
		11BAD383E74866879BB61B69 /* Pods-invia_mwallet_Suncorp.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Suncorp.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Suncorp/Pods-invia_mwallet_Suncorp.dev.xcconfig"; sourceTree = "<group>"; };
		13B07F961A680F5B00A75B9A /* mWallet.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = mWallet.app; sourceTree = BUILT_PRODUCTS_DIR; };
		13B07FAF1A68108700A75B9A /* AppDelegate.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = AppDelegate.h; path = invia_mwallet/AppDelegate.h; sourceTree = "<group>"; };
		13B07FB01A68108700A75B9A /* AppDelegate.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = AppDelegate.m; path = invia_mwallet/AppDelegate.m; sourceTree = "<group>"; };
		13B07FB51A68108700A75B9A /* Images.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Images.xcassets; path = invia_mwallet/Images.xcassets; sourceTree = "<group>"; };
		13B07FB61A68108700A75B9A /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = Info.plist; path = invia_mwallet/Info.plist; sourceTree = "<group>"; };
		13B07FB71A68108700A75B9A /* main.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; name = main.m; path = invia_mwallet/main.m; sourceTree = "<group>"; };
		1A7F33B1D3D74CFAB22047C7 /* Fontisto.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Fontisto.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf"; sourceTree = "<group>"; };
		1B24AF7AD364765DDF71EB00 /* Pods-invia_mwallet-tvOSTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet-tvOSTests.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet-tvOSTests/Pods-invia_mwallet-tvOSTests.release.xcconfig"; sourceTree = "<group>"; };
		1CC9F3B7E3D9655496A906D2 /* Pods-invia_mwallet_Release.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Release.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Release/Pods-invia_mwallet_Release.debug.xcconfig"; sourceTree = "<group>"; };
		1F07E150A53F44779646CCDB /* FontAwesome5_Brands.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Brands.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf"; sourceTree = "<group>"; };
		1FAE3341F91C32551DFB93F6 /* Pods-invia_mwallet-invia_mwalletTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet-invia_mwalletTests.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet-invia_mwalletTests/Pods-invia_mwallet-invia_mwalletTests.debug.xcconfig"; sourceTree = "<group>"; };
		2013935759344CAEA5AA678C /* Pods-invia_mwallet_ICAI.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_ICAI.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_ICAI/Pods-invia_mwallet_ICAI.release.xcconfig"; sourceTree = "<group>"; };
		20F0460E745B4F17B1B6E28D /* Arial-BoldMT.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "Arial-BoldMT.otf"; path = "../src/assets/fonts/Arial-BoldMT.otf"; sourceTree = "<group>"; };
		2926D8F5D55F4BDFA03279D4 /* FontAwesome.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf"; sourceTree = "<group>"; };
		29A56D7CCC48BA9D6D714650 /* libPods-invia_mwallet_CCS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet_CCS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		2B4A4EBA37A01E4D3843814A /* Pods-invia_mwallet_ICAI.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_ICAI.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_ICAI/Pods-invia_mwallet_ICAI.debug.xcconfig"; sourceTree = "<group>"; };
		2D02E47B1E0B4A5D006451C7 /* invia_mwallet-tvOS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "invia_mwallet-tvOS.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		2D02E4901E0B4A5D006451C7 /* invia_mwallet-tvOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = "invia_mwallet-tvOSTests.xctest"; sourceTree = BUILT_PRODUCTS_DIR; };
		301F49F4903552A323E7262A /* libPods-invia_mwallet_Suncorp.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet_Suncorp.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		37A56087313849FEAFC48630 /* Zocial.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Zocial.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Zocial.ttf"; sourceTree = "<group>"; };
		3A2525772545D8760053BC8B /* invia_mwallet.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; name = invia_mwallet.entitlements; path = invia_mwallet/invia_mwallet.entitlements; sourceTree = "<group>"; };
		3A4B082A2669D44500873D2D /* Amway Rewards.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Amway Rewards.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		3A4B082B2669D44500873D2D /* invia_mwallet_Amway-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "invia_mwallet_Amway-Info.plist"; path = "/Users/harshamg/Documents/mWallet_new/ios/invia_mwallet_Amway-Info.plist"; sourceTree = "<absolute>"; };
		3A4B082C2669D62E00873D2D /* GoogleService_Amway-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService_Amway-Info.plist"; sourceTree = "<group>"; };
		3A4B08352669DAE300873D2D /* LaunchScreen_Amway.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = LaunchScreen_Amway.storyboard; sourceTree = "<group>"; };
		3A5635AB26544730002C5A7C /* Cubano.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = Cubano.ttf; sourceTree = "<group>"; };
		3A709B8E254C9BEB00E3936C /* MaterialIcons.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = MaterialIcons.ttf; sourceTree = "<group>"; };
		3A709B90254CA03300E3936C /* Ionicons.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = Ionicons.ttf; sourceTree = "<group>"; };
		3A730774255D7B0500B45110 /* MarkOT-Medium.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "MarkOT-Medium.ttf"; sourceTree = "<group>"; };
		3A730775255D7B0500B45110 /* MarkOT.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = MarkOT.ttf; sourceTree = "<group>"; };
		3A730776255D7B0500B45110 /* MarkOT-Heavy.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "MarkOT-Heavy.ttf"; sourceTree = "<group>"; };
		3AA531392644545900E814C9 /* mWalletProd.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = mWalletProd.app; sourceTree = BUILT_PRODUCTS_DIR; };
		3AA5313A2644545A00E814C9 /* invia_mwallet_Release-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "invia_mwallet_Release-Info.plist"; path = "/Users/harshamg/Documents/mWallet_new/ios/invia_mwallet_Release-Info.plist"; sourceTree = "<absolute>"; };
		3AA5313B2644558200E814C9 /* GoogleService_Release-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService_Release-Info.plist"; sourceTree = "<group>"; };
		3AA77E9A26400C5A002AD85E /* GoogleService_Invia_old-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService_Invia_old-Info.plist"; sourceTree = "<group>"; };
		3AA77E9F26400F6E002AD85E /* LaunchScreen_Dev1.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; path = LaunchScreen_Dev1.storyboard; sourceTree = "<group>"; };
		3AC02966265F63D40008FE72 /* ICAI Rewards.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "ICAI Rewards.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		3AC02967265F63D50008FE72 /* invia_mwallet_Icai-info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "invia_mwallet_Icai-info.plist"; path = "/Users/harshamg/Documents/mWallet_new/ios/invia_mwallet_Icai-info.plist"; sourceTree = "<absolute>"; };
		3AC0298A265F63F30008FE72 /* Suncorp Rewards.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "Suncorp Rewards.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		3AC0298B265F63F30008FE72 /* invia_mwallet_Suncorp-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "invia_mwallet_Suncorp-Info.plist"; path = "/Users/harshamg/Documents/mWallet_new/ios/invia_mwallet_Suncorp-Info.plist"; sourceTree = "<absolute>"; };
		3AC0298C265F72250008FE72 /* LaunchScreen_Suncorp.storyboard */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; path = LaunchScreen_Suncorp.storyboard; sourceTree = "<group>"; };
		3AC0F0B42642D0F800BC9694 /* Graphik-Regular.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Graphik-Regular.ttf"; sourceTree = "<group>"; };
		3AC0F0B92642D2F100BC9694 /* Graphik-Regular.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Graphik-Regular.ttf"; sourceTree = "<group>"; };
		3AC0F0BA2642E46E00BC9694 /* Graphik-Medium.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Graphik-Medium.ttf"; sourceTree = "<group>"; };
		3AC0F0BB2642E46E00BC9694 /* Graphik-Semibold.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Graphik-Semibold.ttf"; sourceTree = "<group>"; };
		3AC0F0C42642E48400BC9694 /* Graphik-Medium.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Graphik-Medium.ttf"; sourceTree = "<group>"; };
		3AC0F0C52642E48400BC9694 /* Graphik-Semibold.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Graphik-Semibold.ttf"; sourceTree = "<group>"; };
		3AC3DC8F2556BF50009B2ACD /* GoogleService_Voda-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = "GoogleService_Voda-Info.plist"; path = "../../../Downloads/GoogleService_Voda-Info.plist"; sourceTree = "<group>"; };
		3AC58FEA263E9EB2009D332B /* Invia.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Invia.app; sourceTree = BUILT_PRODUCTS_DIR; };
		3AC58FEB263E9EB2009D332B /* invia_mwallet_Invia-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "invia_mwallet_Invia-Info.plist"; path = "/Users/harshamg/Documents/mWallet_new/ios/invia_mwallet_Invia-Info.plist"; sourceTree = "<absolute>"; };
		3ACC65E026652FD500CCCF84 /* GoogleService_Suncorp-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService_Suncorp-Info.plist"; sourceTree = "<group>"; };
		3ACC65E82665378C00CCCF84 /* GoogleService_Invia-Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = "GoogleService_Invia-Info.plist"; sourceTree = "<group>"; };
		3AF57CA5263FDF2200C6FC94 /* CCS.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = CCS.app; sourceTree = BUILT_PRODUCTS_DIR; };
		3AF57CA6263FDF2200C6FC94 /* invia_mwallet_CCS-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "invia_mwallet_CCS-Info.plist"; path = "/Users/harshamg/Documents/mWallet_new/ios/invia_mwallet_CCS-Info.plist"; sourceTree = "<absolute>"; };
		3AF57CC1263FDFFC00C6FC94 /* Vodafone.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Vodafone.app; sourceTree = BUILT_PRODUCTS_DIR; };
		3AF57CC2263FDFFD00C6FC94 /* invia_mwallet_Voda-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "invia_mwallet_Voda-Info.plist"; path = "/Users/harshamg/Documents/mWallet_new/ios/invia_mwallet_Voda-Info.plist"; sourceTree = "<absolute>"; };
		3B1BD435361E24037FF87635 /* Pods-invia_mwallet_Amway.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Amway.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Amway/Pods-invia_mwallet_Amway.debug.xcconfig"; sourceTree = "<group>"; };
		43797D7D2B13E26B9F889500 /* Pods-invia_mwallet_CCS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_CCS.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_CCS/Pods-invia_mwallet_CCS.release.xcconfig"; sourceTree = "<group>"; };
		440DA2BC0DF5DD1D747DBA0A /* libPods-invia_mwallet_Invia.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet_Invia.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		46F437C46F4A48A896B90EBA /* Foundation.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Foundation.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Foundation.ttf"; sourceTree = "<group>"; };
		4A984D241A7D75C02253087E /* libPods-invia_mwallet-tvOSTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet-tvOSTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		50604B6297C6102F6A95630B /* Pods-invia_mwallet_Voda.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Voda.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Voda/Pods-invia_mwallet_Voda.debug.xcconfig"; sourceTree = "<group>"; };
		565726E7CA7E4B64BA682F10 /* Entypo.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Entypo.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Entypo.ttf"; sourceTree = "<group>"; };
		56E5AFE2A3274FE49DAC98C3 /* FontAwesome5_Solid.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Solid.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf"; sourceTree = "<group>"; };
		5B698E883314DEE8D2C4729D /* Pods-invia_mwallet_Suncorp.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Suncorp.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Suncorp/Pods-invia_mwallet_Suncorp.release.xcconfig"; sourceTree = "<group>"; };
		5DD2395D388781D47FC16964 /* Pods-invia_mwallet_Invia.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Invia.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Invia/Pods-invia_mwallet_Invia.dev.xcconfig"; sourceTree = "<group>"; };
		64C894CB8F30009058451757 /* Pods-invia_mwallet_Voda.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Voda.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Voda/Pods-invia_mwallet_Voda.dev.xcconfig"; sourceTree = "<group>"; };
		6AF9C3EEC21C450AB25DF90A /* AntDesign.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = AntDesign.ttf; path = "../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf"; sourceTree = "<group>"; };
		6B2E01091C9D4804B5D7A161 /* EvilIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = EvilIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf"; sourceTree = "<group>"; };
		6C98689CA87042E1AA8FE4BF /* ARIAL.TTF */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = ARIAL.TTF; path = ../src/assets/fonts/ARIAL.TTF; sourceTree = "<group>"; };
		6DFF7A8E2979249800295F30 /* mycert.cer */ = {isa = PBXFileReference; lastKnownFileType = file; path = mycert.cer; sourceTree = "<group>"; };
		6DFF7A8F2979249800295F30 /* expcert.cer */ = {isa = PBXFileReference; lastKnownFileType = file; path = expcert.cer; sourceTree = "<group>"; };
		6F609A3D107DE476A1DE4336 /* libPods-invia_mwallet-tvOS.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet-tvOS.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		740F8FAF9DFC5754101251B3 /* Pods-invia_mwallet-tvOS.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet-tvOS.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet-tvOS/Pods-invia_mwallet-tvOS.dev.xcconfig"; sourceTree = "<group>"; };
		75D1F9B13AB64FDF20071D21 /* Pods-invia_mwallet_ICAI.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_ICAI.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_ICAI/Pods-invia_mwallet_ICAI.dev.xcconfig"; sourceTree = "<group>"; };
		7CDF0F32CCB557A73AF5EF63 /* Pods-invia_mwallet_CCS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_CCS.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_CCS/Pods-invia_mwallet_CCS.debug.xcconfig"; sourceTree = "<group>"; };
		7D1C8CDF9253F2DE325F6749 /* Pods-invia_mwallet-invia_mwalletTests.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet-invia_mwalletTests.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet-invia_mwalletTests/Pods-invia_mwallet-invia_mwalletTests.dev.xcconfig"; sourceTree = "<group>"; };
		81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = file.storyboard; name = LaunchScreen.storyboard; path = invia_mwallet/LaunchScreen.storyboard; sourceTree = "<group>"; };
		82E01E4D16341C754A677445 /* Pods-invia_mwallet_Release.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Release.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Release/Pods-invia_mwallet_Release.dev.xcconfig"; sourceTree = "<group>"; };
		831BACA55463C77AC1A265CC /* Pods-invia_mwallet_Suncorp.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Suncorp.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Suncorp/Pods-invia_mwallet_Suncorp.debug.xcconfig"; sourceTree = "<group>"; };
		8F16F8AA9C57837A6B415FB2 /* Pods-invia_mwallet_CCS.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_CCS.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_CCS/Pods-invia_mwallet_CCS.dev.xcconfig"; sourceTree = "<group>"; };
		9109C66E77D6A3F1BE69272F /* Pods-invia_mwallet_Invia.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Invia.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Invia/Pods-invia_mwallet_Invia.debug.xcconfig"; sourceTree = "<group>"; };
		912711043AE658045816E7BE /* Pods-invia_mwallet_Amway.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Amway.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Amway/Pods-invia_mwallet_Amway.release.xcconfig"; sourceTree = "<group>"; };
		9150088DDB62467B80884F34 /* Octicons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Octicons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Octicons.ttf"; sourceTree = "<group>"; };
		917FAF08E5B1486ABD6C9ECC /* ArialMTStd-Medium.otf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = "ArialMTStd-Medium.otf"; path = "../src/assets/fonts/ArialMTStd-Medium.otf"; sourceTree = "<group>"; };
		954096A407B09121AC5A621F /* Pods-invia_mwallet.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet/Pods-invia_mwallet.dev.xcconfig"; sourceTree = "<group>"; };
		95C029A07644DA1A27377E58 /* libPods-invia_mwallet.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		9779D1766987460CAA0E0022 /* Ionicons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = Ionicons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf"; sourceTree = "<group>"; };
		9C10A23B8B3943C2941BEBE5 /* MaterialCommunityIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = MaterialCommunityIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf"; sourceTree = "<group>"; };
		9E82300C58DD6AD6F56AC130 /* libPods-invia_mwallet-invia_mwalletTests.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet-invia_mwalletTests.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		A6398F4F26617A1896D79CCB /* Pods-invia_mwallet_CCS_Prod.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_CCS_Prod.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_CCS_Prod/Pods-invia_mwallet_CCS_Prod.dev.xcconfig"; sourceTree = "<group>"; };
		A982A079A1D3952FF65EAC76 /* Pods-invia_mwallet_Amway.dev.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Amway.dev.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Amway/Pods-invia_mwallet_Amway.dev.xcconfig"; sourceTree = "<group>"; };
		AA7B5B7B5FCDF52F5A034BAE /* Pods-invia_mwallet.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet/Pods-invia_mwallet.debug.xcconfig"; sourceTree = "<group>"; };
		AEFFAA9651F6AC5150A8B1BA /* Pods-invia_mwallet-tvOSTests.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet-tvOSTests.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet-tvOSTests/Pods-invia_mwallet-tvOSTests.debug.xcconfig"; sourceTree = "<group>"; };
		B11F25B2D2C471AD5BA5D777 /* Pods-invia_mwallet_CCS_Prod.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_CCS_Prod.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_CCS_Prod/Pods-invia_mwallet_CCS_Prod.debug.xcconfig"; sourceTree = "<group>"; };
		B1E201304F7F9E274AB44A25 /* Pods-invia_mwallet-tvOS.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet-tvOS.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet-tvOS/Pods-invia_mwallet-tvOS.release.xcconfig"; sourceTree = "<group>"; };
		BB615C5FA8514613BF417138 /* MaterialIcons.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = MaterialIcons.ttf; path = "../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf"; sourceTree = "<group>"; };
		BBC5E7E6DC06818A65D9CA5C /* Pods-invia_mwallet_Voda.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Voda.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Voda/Pods-invia_mwallet_Voda.release.xcconfig"; sourceTree = "<group>"; };
		C83E881AC79B7AA4DFE48BCE /* Pods-invia_mwallet.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet/Pods-invia_mwallet.release.xcconfig"; sourceTree = "<group>"; };
		C9EFA4EDEC714C5992940292 /* FontAwesome5_Regular.ttf */ = {isa = PBXFileReference; explicitFileType = undefined; fileEncoding = 9; includeInIndex = 0; lastKnownFileType = unknown; name = FontAwesome5_Regular.ttf; path = "../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf"; sourceTree = "<group>"; };
		D6ED030C7A270C6F5D672D6F /* Pods-invia_mwallet_Release.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Release.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Release/Pods-invia_mwallet_Release.release.xcconfig"; sourceTree = "<group>"; };
		DBE875FDFD0EF84318880ECD /* libPods-invia_mwallet_Amway.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet_Amway.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		E3F60E2905CF76555B086FA2 /* Pods-invia_mwallet_CCS_Prod.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_CCS_Prod.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_CCS_Prod/Pods-invia_mwallet_CCS_Prod.release.xcconfig"; sourceTree = "<group>"; };
		E4DACF93FEABF91E4E36F0E6 /* libPods-invia_mwallet_Voda.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet_Voda.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		E87586AA75740D5C911D0AC8 /* Pods-invia_mwallet-invia_mwalletTests.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet-invia_mwalletTests.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet-invia_mwalletTests/Pods-invia_mwallet-invia_mwalletTests.release.xcconfig"; sourceTree = "<group>"; };
		EBB93C11C9198AA1BFEDBA2B /* libPods-invia_mwallet_ICAI.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = "libPods-invia_mwallet_ICAI.a"; sourceTree = BUILT_PRODUCTS_DIR; };
		ED297162215061F000B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = System/Library/Frameworks/JavaScriptCore.framework; sourceTree = SDKROOT; };
		ED2971642150620600B7C4FE /* JavaScriptCore.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = JavaScriptCore.framework; path = Platforms/AppleTVOS.platform/Developer/SDKs/AppleTVOS12.0.sdk/System/Library/Frameworks/JavaScriptCore.framework; sourceTree = DEVELOPER_DIR; };
		F5BAFC31FA4C15AC636F521C /* Pods-invia_mwallet-tvOS.debug.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet-tvOS.debug.xcconfig"; path = "Target Support Files/Pods-invia_mwallet-tvOS/Pods-invia_mwallet-tvOS.debug.xcconfig"; sourceTree = "<group>"; };
		F93D51A8D85C569C0048A858 /* Pods-invia_mwallet_Invia.release.xcconfig */ = {isa = PBXFileReference; includeInIndex = 1; lastKnownFileType = text.xcconfig; name = "Pods-invia_mwallet_Invia.release.xcconfig"; path = "Target Support Files/Pods-invia_mwallet_Invia/Pods-invia_mwallet_Invia.release.xcconfig"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		00E356EB1AD99517003FC87E /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				8631B3EC9CD7F6A23AC66378 /* libPods-invia_mwallet-invia_mwalletTests.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		09142421270437FA00038070 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				093DE624270572D4005B4E74 /* libPods-invia_mwallet_CCS_Prod.a in Frameworks */,
				09142423270437FA00038070 /* CloudKit.framework in Frameworks */,
				4AF9AE24472715837BDCADF7 /* libPods-invia_mwallet_CCS_Prod.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F8C1A680F5B00A75B9A /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CF01D48B6E970EA12E77230D /* libPods-invia_mwallet.a in Frameworks */,
				B88EAB731B3392CBBEF93382 /* libPods-invia_mwallet.a in Frameworks */,
				C156B06CD221CB8C26710C66 /* libPods-invia_mwallet.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E4781E0B4A5D006451C7 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				15349965DC0EC08361A36DC7 /* libPods-invia_mwallet-tvOS.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E48D1E0B4A5D006451C7 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				9D3B3C737E15521AAEC050F8 /* libPods-invia_mwallet-tvOSTests.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3A4B080B2669D44500873D2D /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				E028FCDCF2C3561A4E374C26 /* libPods-invia_mwallet_Amway.a in Frameworks */,
				09517791270445AD00E42BAF /* CloudKit.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AA531202644545900E814C9 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				1753670FC8126ADB8DBA5CF2 /* libPods-invia_mwallet_Release.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AC0294A265F63D40008FE72 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6790D2A90A54FB7D9E493253 /* libPods-invia_mwallet_ICAI.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AC0296E265F63F30008FE72 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				61BB5EC26A87C211C761514E /* libPods-invia_mwallet_Suncorp.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AC58FD8263E9EB2009D332B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				35A47B3BE1CDF4FBC1ECD305 /* libPods-invia_mwallet_Invia.a in Frameworks */,
				FD02F30135A810012E1A1133 /* libPods-invia_mwallet_Invia.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AF57C91263FDF2200C6FC94 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				705A9DAF2199A8C8C1331904 /* (null) in Frameworks */,
				09BACE1226945E1A00CD61DD /* CloudKit.framework in Frameworks */,
				1054F470CD67EDF480A44492 /* libPods-invia_mwallet_CCS.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AF57CAD263FDFFC00C6FC94 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				47B60F8101C80B580B4A52B9 /* libPods-invia_mwallet_Voda.a in Frameworks */,
				B2C95FF9576CA697403DBE72 /* libPods-invia_mwallet_Voda.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		00E356EF1AD99517003FC87E /* invia_mwalletTests */ = {
			isa = PBXGroup;
			children = (
				00E356F21AD99517003FC87E /* invia_mwalletTests.m */,
				00E356F01AD99517003FC87E /* Supporting Files */,
			);
			path = invia_mwalletTests;
			sourceTree = "<group>";
		};
		00E356F01AD99517003FC87E /* Supporting Files */ = {
			isa = PBXGroup;
			children = (
				00E356F11AD99517003FC87E /* Info.plist */,
			);
			name = "Supporting Files";
			sourceTree = "<group>";
		};
		13B07FAE1A68108700A75B9A /* invia_mwallet */ = {
			isa = PBXGroup;
			children = (
				3AA77E9A26400C5A002AD85E /* GoogleService_Invia_old-Info.plist */,
				3AC3DC8F2556BF50009B2ACD /* GoogleService_Voda-Info.plist */,
				3ACC65E026652FD500CCCF84 /* GoogleService_Suncorp-Info.plist */,
				0930E76126B3AC6500F8C0AA /* GoogleService-Info.plist */,
				3A4B082C2669D62E00873D2D /* GoogleService_Amway-Info.plist */,
				3ACC65E82665378C00CCCF84 /* GoogleService_Invia-Info.plist */,
				3AA5313B2644558200E814C9 /* GoogleService_Release-Info.plist */,
				0951779C2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist */,
				3A2525772545D8760053BC8B /* invia_mwallet.entitlements */,
				008F07F21AC5B25A0029DE68 /* main.jsbundle */,
				13B07FAF1A68108700A75B9A /* AppDelegate.h */,
				13B07FB01A68108700A75B9A /* AppDelegate.m */,
				13B07FB51A68108700A75B9A /* Images.xcassets */,
				13B07FB61A68108700A75B9A /* Info.plist */,
				3AA77E9F26400F6E002AD85E /* LaunchScreen_Dev1.storyboard */,
				81AB9BB72411601600AC10FF /* LaunchScreen.storyboard */,
				13B07FB71A68108700A75B9A /* main.m */,
				3AC0298C265F72250008FE72 /* LaunchScreen_Suncorp.storyboard */,
				3A4B08352669DAE300873D2D /* LaunchScreen_Amway.storyboard */,
				09ED8C8326AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard */,
				09ED8C8C26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard */,
			);
			name = invia_mwallet;
			sourceTree = "<group>";
		};
		2D16E6871FA4F8E400B85C8A /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				093DE623270572D4005B4E74 /* libPods-invia_mwallet_CCS_Prod.a */,
				09BACE1126945E1A00CD61DD /* CloudKit.framework */,
				ED297162215061F000B7C4FE /* JavaScriptCore.framework */,
				ED2971642150620600B7C4FE /* JavaScriptCore.framework */,
				95C029A07644DA1A27377E58 /* libPods-invia_mwallet.a */,
				9E82300C58DD6AD6F56AC130 /* libPods-invia_mwallet-invia_mwalletTests.a */,
				6F609A3D107DE476A1DE4336 /* libPods-invia_mwallet-tvOS.a */,
				4A984D241A7D75C02253087E /* libPods-invia_mwallet-tvOSTests.a */,
				440DA2BC0DF5DD1D747DBA0A /* libPods-invia_mwallet_Invia.a */,
				E4DACF93FEABF91E4E36F0E6 /* libPods-invia_mwallet_Voda.a */,
				DBE875FDFD0EF84318880ECD /* libPods-invia_mwallet_Amway.a */,
				EBB93C11C9198AA1BFEDBA2B /* libPods-invia_mwallet_ICAI.a */,
				0550C233B9709E52FF61EB5D /* libPods-invia_mwallet_Release.a */,
				301F49F4903552A323E7262A /* libPods-invia_mwallet_Suncorp.a */,
				109E0F46141ABC1EB4A370CD /* libPods-invia_mwallet_CCS_Prod.a */,
				29A56D7CCC48BA9D6D714650 /* libPods-invia_mwallet_CCS.a */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		832341AE1AAA6A7D00B99B32 /* Libraries */ = {
			isa = PBXGroup;
			children = (
			);
			name = Libraries;
			sourceTree = "<group>";
		};
		83CBB9F61A601CBA00E9B192 = {
			isa = PBXGroup;
			children = (
				6DFF7A8F2979249800295F30 /* expcert.cer */,
				6DFF7A8E2979249800295F30 /* mycert.cer */,
				3AC0F0C42642E48400BC9694 /* Graphik-Medium.ttf */,
				3AC0F0C52642E48400BC9694 /* Graphik-Semibold.ttf */,
				3AC0F0B92642D2F100BC9694 /* Graphik-Regular.ttf */,
				13B07FAE1A68108700A75B9A /* invia_mwallet */,
				832341AE1AAA6A7D00B99B32 /* Libraries */,
				00E356EF1AD99517003FC87E /* invia_mwalletTests */,
				83CBBA001A601CBA00E9B192 /* Products */,
				2D16E6871FA4F8E400B85C8A /* Frameworks */,
				BE9DF7EBD35AE259A5CFC03A /* Pods */,
				C2CFFB1F00FA4C6EBFC0F6A4 /* Resources */,
				3AC58FEB263E9EB2009D332B /* invia_mwallet_Invia-Info.plist */,
				3AF57CA6263FDF2200C6FC94 /* invia_mwallet_CCS-Info.plist */,
				3AF57CC2263FDFFD00C6FC94 /* invia_mwallet_Voda-Info.plist */,
				3AA5313A2644545A00E814C9 /* invia_mwallet_Release-Info.plist */,
				3AC02967265F63D50008FE72 /* invia_mwallet_Icai-info.plist */,
				3AC0298B265F63F30008FE72 /* invia_mwallet_Suncorp-Info.plist */,
				3A4B082B2669D44500873D2D /* invia_mwallet_Amway-Info.plist */,
				09142445270437FA00038070 /* invia_mwallet_CCS_Prod-Info.plist */,
			);
			indentWidth = 2;
			sourceTree = "<group>";
			tabWidth = 2;
			usesTabs = 0;
		};
		83CBBA001A601CBA00E9B192 /* Products */ = {
			isa = PBXGroup;
			children = (
				13B07F961A680F5B00A75B9A /* mWallet.app */,
				00E356EE1AD99517003FC87E /* invia_mwalletTests.xctest */,
				2D02E47B1E0B4A5D006451C7 /* invia_mwallet-tvOS.app */,
				2D02E4901E0B4A5D006451C7 /* invia_mwallet-tvOSTests.xctest */,
				3AC58FEA263E9EB2009D332B /* Invia.app */,
				3AF57CA5263FDF2200C6FC94 /* CCS.app */,
				3AF57CC1263FDFFC00C6FC94 /* Vodafone.app */,
				3AA531392644545900E814C9 /* mWalletProd.app */,
				3AC02966265F63D40008FE72 /* ICAI Rewards.app */,
				3AC0298A265F63F30008FE72 /* Suncorp Rewards.app */,
				3A4B082A2669D44500873D2D /* Amway Rewards.app */,
				09142444270437FA00038070 /* invia_mwallet_CCS_Prod.app */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		BE9DF7EBD35AE259A5CFC03A /* Pods */ = {
			isa = PBXGroup;
			children = (
				1FAE3341F91C32551DFB93F6 /* Pods-invia_mwallet-invia_mwalletTests.debug.xcconfig */,
				E87586AA75740D5C911D0AC8 /* Pods-invia_mwallet-invia_mwalletTests.release.xcconfig */,
				F5BAFC31FA4C15AC636F521C /* Pods-invia_mwallet-tvOS.debug.xcconfig */,
				B1E201304F7F9E274AB44A25 /* Pods-invia_mwallet-tvOS.release.xcconfig */,
				AEFFAA9651F6AC5150A8B1BA /* Pods-invia_mwallet-tvOSTests.debug.xcconfig */,
				1B24AF7AD364765DDF71EB00 /* Pods-invia_mwallet-tvOSTests.release.xcconfig */,
				7D1C8CDF9253F2DE325F6749 /* Pods-invia_mwallet-invia_mwalletTests.dev.xcconfig */,
				740F8FAF9DFC5754101251B3 /* Pods-invia_mwallet-tvOS.dev.xcconfig */,
				0F038248446B36A23751AA18 /* Pods-invia_mwallet-tvOSTests.dev.xcconfig */,
				AA7B5B7B5FCDF52F5A034BAE /* Pods-invia_mwallet.debug.xcconfig */,
				954096A407B09121AC5A621F /* Pods-invia_mwallet.dev.xcconfig */,
				C83E881AC79B7AA4DFE48BCE /* Pods-invia_mwallet.release.xcconfig */,
				7CDF0F32CCB557A73AF5EF63 /* Pods-invia_mwallet_CCS.debug.xcconfig */,
				8F16F8AA9C57837A6B415FB2 /* Pods-invia_mwallet_CCS.dev.xcconfig */,
				43797D7D2B13E26B9F889500 /* Pods-invia_mwallet_CCS.release.xcconfig */,
				50604B6297C6102F6A95630B /* Pods-invia_mwallet_Voda.debug.xcconfig */,
				64C894CB8F30009058451757 /* Pods-invia_mwallet_Voda.dev.xcconfig */,
				BBC5E7E6DC06818A65D9CA5C /* Pods-invia_mwallet_Voda.release.xcconfig */,
				9109C66E77D6A3F1BE69272F /* Pods-invia_mwallet_Invia.debug.xcconfig */,
				5DD2395D388781D47FC16964 /* Pods-invia_mwallet_Invia.dev.xcconfig */,
				F93D51A8D85C569C0048A858 /* Pods-invia_mwallet_Invia.release.xcconfig */,
				3B1BD435361E24037FF87635 /* Pods-invia_mwallet_Amway.debug.xcconfig */,
				A982A079A1D3952FF65EAC76 /* Pods-invia_mwallet_Amway.dev.xcconfig */,
				912711043AE658045816E7BE /* Pods-invia_mwallet_Amway.release.xcconfig */,
				2B4A4EBA37A01E4D3843814A /* Pods-invia_mwallet_ICAI.debug.xcconfig */,
				75D1F9B13AB64FDF20071D21 /* Pods-invia_mwallet_ICAI.dev.xcconfig */,
				2013935759344CAEA5AA678C /* Pods-invia_mwallet_ICAI.release.xcconfig */,
				1CC9F3B7E3D9655496A906D2 /* Pods-invia_mwallet_Release.debug.xcconfig */,
				82E01E4D16341C754A677445 /* Pods-invia_mwallet_Release.dev.xcconfig */,
				D6ED030C7A270C6F5D672D6F /* Pods-invia_mwallet_Release.release.xcconfig */,
				831BACA55463C77AC1A265CC /* Pods-invia_mwallet_Suncorp.debug.xcconfig */,
				11BAD383E74866879BB61B69 /* Pods-invia_mwallet_Suncorp.dev.xcconfig */,
				5B698E883314DEE8D2C4729D /* Pods-invia_mwallet_Suncorp.release.xcconfig */,
				B11F25B2D2C471AD5BA5D777 /* Pods-invia_mwallet_CCS_Prod.debug.xcconfig */,
				A6398F4F26617A1896D79CCB /* Pods-invia_mwallet_CCS_Prod.dev.xcconfig */,
				E3F60E2905CF76555B086FA2 /* Pods-invia_mwallet_CCS_Prod.release.xcconfig */,
			);
			path = Pods;
			sourceTree = "<group>";
		};
		C2CFFB1F00FA4C6EBFC0F6A4 /* Resources */ = {
			isa = PBXGroup;
			children = (
				20F0460E745B4F17B1B6E28D /* Arial-BoldMT.otf */,
				3A730776255D7B0500B45110 /* MarkOT-Heavy.ttf */,
				3A730774255D7B0500B45110 /* MarkOT-Medium.ttf */,
				3A730775255D7B0500B45110 /* MarkOT.ttf */,
				3A709B90254CA03300E3936C /* Ionicons.ttf */,
				3A5635AB26544730002C5A7C /* Cubano.ttf */,
				6C98689CA87042E1AA8FE4BF /* ARIAL.TTF */,
				3A709B8E254C9BEB00E3936C /* MaterialIcons.ttf */,
				3AC0F0B42642D0F800BC9694 /* Graphik-Regular.ttf */,
				917FAF08E5B1486ABD6C9ECC /* ArialMTStd-Medium.otf */,
				6AF9C3EEC21C450AB25DF90A /* AntDesign.ttf */,
				3AC0F0BA2642E46E00BC9694 /* Graphik-Medium.ttf */,
				3AC0F0BB2642E46E00BC9694 /* Graphik-Semibold.ttf */,
				565726E7CA7E4B64BA682F10 /* Entypo.ttf */,
				6B2E01091C9D4804B5D7A161 /* EvilIcons.ttf */,
				085EE7E48BAC4FB287A4AEC5 /* Feather.ttf */,
				2926D8F5D55F4BDFA03279D4 /* FontAwesome.ttf */,
				1F07E150A53F44779646CCDB /* FontAwesome5_Brands.ttf */,
				C9EFA4EDEC714C5992940292 /* FontAwesome5_Regular.ttf */,
				56E5AFE2A3274FE49DAC98C3 /* FontAwesome5_Solid.ttf */,
				1A7F33B1D3D74CFAB22047C7 /* Fontisto.ttf */,
				46F437C46F4A48A896B90EBA /* Foundation.ttf */,
				9779D1766987460CAA0E0022 /* Ionicons.ttf */,
				9C10A23B8B3943C2941BEBE5 /* MaterialCommunityIcons.ttf */,
				BB615C5FA8514613BF417138 /* MaterialIcons.ttf */,
				9150088DDB62467B80884F34 /* Octicons.ttf */,
				10E03C1D29924266BF94FA46 /* SimpleLineIcons.ttf */,
				37A56087313849FEAFC48630 /* Zocial.ttf */,
			);
			name = Resources;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		00E356ED1AD99517003FC87E /* invia_mwalletTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "invia_mwalletTests" */;
			buildPhases = (
				9FC5A797DB6452B233B75AEB /* [CP] Check Pods Manifest.lock */,
				00E356EA1AD99517003FC87E /* Sources */,
				00E356EB1AD99517003FC87E /* Frameworks */,
				00E356EC1AD99517003FC87E /* Resources */,
				511B958D0F696DF63ECD750C /* [CP] Copy Pods Resources */,
			);
			buildRules = (
			);
			dependencies = (
				00E356F51AD99517003FC87E /* PBXTargetDependency */,
			);
			name = invia_mwalletTests;
			productName = invia_mwalletTests;
			productReference = 00E356EE1AD99517003FC87E /* invia_mwalletTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		0914241B270437FA00038070 /* invia_mwallet_CCS_Prod */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 09142440270437FA00038070 /* Build configuration list for PBXNativeTarget "invia_mwallet_CCS_Prod" */;
			buildPhases = (
				0914241C270437FA00038070 /* [CP] Check Pods Manifest.lock */,
				0914241D270437FA00038070 /* Start Packager */,
				0914241E270437FA00038070 /* Sources */,
				09142421270437FA00038070 /* Frameworks */,
				09142424270437FA00038070 /* Resources */,
				0914243D270437FA00038070 /* Bundle React Native code and images */,
				0914243E270437FA00038070 /* [CP] Copy Pods Resources */,
				0914243F270437FA00038070 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = invia_mwallet_CCS_Prod;
			productName = invia_mwallet;
			productReference = 09142444270437FA00038070 /* invia_mwallet_CCS_Prod.app */;
			productType = "com.apple.product-type.application";
		};
		13B07F861A680F5B00A75B9A /* invia_mwallet */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "invia_mwallet" */;
			buildPhases = (
				D4E68A876E3D8D71BBE421F1 /* [CP] Check Pods Manifest.lock */,
				FD10A7F022414F080027D42C /* Start Packager */,
				13B07F871A680F5B00A75B9A /* Sources */,
				13B07F8C1A680F5B00A75B9A /* Frameworks */,
				13B07F8E1A680F5B00A75B9A /* Resources */,
				00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,
				24FF2E799A6F3B92B94C3D4F /* [CP] Copy Pods Resources */,
				769856DC345303422084C8C2 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = invia_mwallet;
			productName = invia_mwallet;
			productReference = 13B07F961A680F5B00A75B9A /* mWallet.app */;
			productType = "com.apple.product-type.application";
		};
		2D02E47A1E0B4A5D006451C7 /* invia_mwallet-tvOS */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "invia_mwallet-tvOS" */;
			buildPhases = (
				2CB82BE3D42CF6AD251D0E95 /* [CP] Check Pods Manifest.lock */,
				FD10A7F122414F3F0027D42C /* Start Packager */,
				2D02E4771E0B4A5D006451C7 /* Sources */,
				2D02E4781E0B4A5D006451C7 /* Frameworks */,
				2D02E4791E0B4A5D006451C7 /* Resources */,
				2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = "invia_mwallet-tvOS";
			productName = "invia_mwallet-tvOS";
			productReference = 2D02E47B1E0B4A5D006451C7 /* invia_mwallet-tvOS.app */;
			productType = "com.apple.product-type.application";
		};
		2D02E48F1E0B4A5D006451C7 /* invia_mwallet-tvOSTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "invia_mwallet-tvOSTests" */;
			buildPhases = (
				BBF65E98A96A8A5749C87839 /* [CP] Check Pods Manifest.lock */,
				2D02E48C1E0B4A5D006451C7 /* Sources */,
				2D02E48D1E0B4A5D006451C7 /* Frameworks */,
				2D02E48E1E0B4A5D006451C7 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				2D02E4921E0B4A5D006451C7 /* PBXTargetDependency */,
			);
			name = "invia_mwallet-tvOSTests";
			productName = "invia_mwallet-tvOSTests";
			productReference = 2D02E4901E0B4A5D006451C7 /* invia_mwallet-tvOSTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		3A4B08052669D44500873D2D /* invia_mwallet_Amway */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3A4B08262669D44500873D2D /* Build configuration list for PBXNativeTarget "invia_mwallet_Amway" */;
			buildPhases = (
				7E40CB1E969E2C805A39B910 /* [CP] Check Pods Manifest.lock */,
				3A4B08072669D44500873D2D /* Start Packager */,
				3A4B08082669D44500873D2D /* Sources */,
				3A4B080B2669D44500873D2D /* Frameworks */,
				3A4B080D2669D44500873D2D /* Resources */,
				3A4B08222669D44500873D2D /* Bundle React Native code and images */,
				3A4B08252669D44500873D2D /* FB Configuration */,
				6F95E809D740EC3576D3057B /* [CP] Copy Pods Resources */,
				3386B4E7E918C109330A9592 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = invia_mwallet_Amway;
			productName = invia_mwallet;
			productReference = 3A4B082A2669D44500873D2D /* Amway Rewards.app */;
			productType = "com.apple.product-type.application";
		};
		3AA5311A2644545900E814C9 /* invia_mwallet_Release */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3AA531352644545900E814C9 /* Build configuration list for PBXNativeTarget "invia_mwallet_Release" */;
			buildPhases = (
				9D0D1489EEB67AD35D4E3E47 /* [CP] Check Pods Manifest.lock */,
				3AA5311C2644545900E814C9 /* Start Packager */,
				3AA5311D2644545900E814C9 /* Sources */,
				3AA531202644545900E814C9 /* Frameworks */,
				3AA531222644545900E814C9 /* Resources */,
				3AA531322644545900E814C9 /* Bundle React Native code and images */,
				2D3A23060D9450FB1BFC8F74 /* [CP] Copy Pods Resources */,
				DB91B74550F0923460FC0B33 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = invia_mwallet_Release;
			productName = invia_mwallet;
			productReference = 3AA531392644545900E814C9 /* mWalletProd.app */;
			productType = "com.apple.product-type.application";
		};
		3AC02944265F63D40008FE72 /* invia_mwallet_ICAI */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3AC02962265F63D40008FE72 /* Build configuration list for PBXNativeTarget "invia_mwallet_ICAI" */;
			buildPhases = (
				AB9F42ED2511BEAB7D489304 /* [CP] Check Pods Manifest.lock */,
				3AC02946265F63D40008FE72 /* Start Packager */,
				3AC02947265F63D40008FE72 /* Sources */,
				3AC0294A265F63D40008FE72 /* Frameworks */,
				3AC0294C265F63D40008FE72 /* Resources */,
				3AC0295E265F63D40008FE72 /* Bundle React Native code and images */,
				3AC02961265F63D40008FE72 /* FB Configuration */,
				2366BF6DF5A388DD4B7FF376 /* [CP] Copy Pods Resources */,
				51DE93ECF0F21E1D5C061D59 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = invia_mwallet_ICAI;
			productName = invia_mwallet;
			productReference = 3AC02966265F63D40008FE72 /* ICAI Rewards.app */;
			productType = "com.apple.product-type.application";
		};
		3AC02968265F63F30008FE72 /* invia_mwallet_Suncorp */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3AC02986265F63F30008FE72 /* Build configuration list for PBXNativeTarget "invia_mwallet_Suncorp" */;
			buildPhases = (
				BD669C7454C2D52C0A4F7C63 /* [CP] Check Pods Manifest.lock */,
				3AC0296A265F63F30008FE72 /* Start Packager */,
				3AC0296B265F63F30008FE72 /* Sources */,
				3AC0296E265F63F30008FE72 /* Frameworks */,
				3AC02970265F63F30008FE72 /* Resources */,
				3AC02982265F63F30008FE72 /* Bundle React Native code and images */,
				3AC02985265F63F30008FE72 /* FB Configuration */,
				FEF3CC85FC8047B84B087FB5 /* [CP] Copy Pods Resources */,
				9066A7BDFCE8A2F74A6B6F92 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = invia_mwallet_Suncorp;
			productName = invia_mwallet;
			productReference = 3AC0298A265F63F30008FE72 /* Suncorp Rewards.app */;
			productType = "com.apple.product-type.application";
		};
		3AC58FD2263E9EB2009D332B /* invia_mwallet_Invia */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3AC58FE7263E9EB2009D332B /* Build configuration list for PBXNativeTarget "invia_mwallet_Invia" */;
			buildPhases = (
				43B2A50140D77A03EEB4DB71 /* [CP] Check Pods Manifest.lock */,
				3AC58FD4263E9EB2009D332B /* Start Packager */,
				3AC58FD5263E9EB2009D332B /* Sources */,
				3AC58FD8263E9EB2009D332B /* Frameworks */,
				3AC58FDA263E9EB2009D332B /* Resources */,
				3AC58FE4263E9EB2009D332B /* Bundle React Native code and images */,
				FE4849AC809801EF511E496B /* [CP] Copy Pods Resources */,
				A1B5C8633EE18BF507DEE5DE /* [CP-User] [RNFB] Core Configuration */,
				3AF57CC3263FF42900C6FC94 /* FB Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = invia_mwallet_Invia;
			productName = invia_mwallet;
			productReference = 3AC58FEA263E9EB2009D332B /* Invia.app */;
			productType = "com.apple.product-type.application";
		};
		3AF57C8B263FDF2200C6FC94 /* invia_mwallet_CCS */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3AF57CA1263FDF2200C6FC94 /* Build configuration list for PBXNativeTarget "invia_mwallet_CCS" */;
			buildPhases = (
				19584529580C99DDA3AC2B47 /* [CP] Check Pods Manifest.lock */,
				3AF57C8D263FDF2200C6FC94 /* Start Packager */,
				3AF57C8E263FDF2200C6FC94 /* Sources */,
				3AF57C91263FDF2200C6FC94 /* Frameworks */,
				3AF57C94263FDF2200C6FC94 /* Resources */,
				3AF57C9E263FDF2200C6FC94 /* Bundle React Native code and images */,
				C7B9B870EB23301CBAB0DB8C /* [CP] Copy Pods Resources */,
				00C5258C120BAE3CE00F4E74 /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = invia_mwallet_CCS;
			productName = invia_mwallet;
			productReference = 3AF57CA5263FDF2200C6FC94 /* CCS.app */;
			productType = "com.apple.product-type.application";
		};
		3AF57CA7263FDFFC00C6FC94 /* invia_mwallet_Voda */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 3AF57CBD263FDFFC00C6FC94 /* Build configuration list for PBXNativeTarget "invia_mwallet_Voda" */;
			buildPhases = (
				B8AC5D83491C1A058AB9B377 /* [CP] Check Pods Manifest.lock */,
				3AF57CA9263FDFFC00C6FC94 /* Start Packager */,
				3AF57CAA263FDFFC00C6FC94 /* Sources */,
				3AF57CAD263FDFFC00C6FC94 /* Frameworks */,
				3AF57CB0263FDFFC00C6FC94 /* Resources */,
				3AF57CBA263FDFFC00C6FC94 /* Bundle React Native code and images */,
				3A0900E515076DE88C7F476F /* [CP] Copy Pods Resources */,
				2CD23072E0BFB340CC92D89D /* [CP-User] [RNFB] Core Configuration */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = invia_mwallet_Voda;
			productName = invia_mwallet;
			productReference = 3AF57CC1263FDFFC00C6FC94 /* Vodafone.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		83CBB9F71A601CBA00E9B192 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1130;
				TargetAttributes = {
					00E356ED1AD99517003FC87E = {
						CreatedOnToolsVersion = 6.2;
						TestTargetID = 13B07F861A680F5B00A75B9A;
					};
					0914241B270437FA00038070 = {
						DevelopmentTeam = 7CTDVR4TX3;
						ProvisioningStyle = Automatic;
					};
					13B07F861A680F5B00A75B9A = {
						DevelopmentTeam = 86G3NZTX45;
						LastSwiftMigration = 1120;
						ProvisioningStyle = Automatic;
					};
					2D02E47A1E0B4A5D006451C7 = {
						CreatedOnToolsVersion = 8.2.1;
						ProvisioningStyle = Automatic;
					};
					2D02E48F1E0B4A5D006451C7 = {
						CreatedOnToolsVersion = 8.2.1;
						ProvisioningStyle = Automatic;
						TestTargetID = 2D02E47A1E0B4A5D006451C7;
					};
					3A4B08052669D44500873D2D = {
						DevelopmentTeam = 86G3NZTX45;
						ProvisioningStyle = Automatic;
					};
					3AA5311A2644545900E814C9 = {
						DevelopmentTeam = 86G3NZTX45;
						ProvisioningStyle = Automatic;
					};
					3AC02944265F63D40008FE72 = {
						DevelopmentTeam = 86G3NZTX45;
						ProvisioningStyle = Automatic;
					};
					3AC02968265F63F30008FE72 = {
						DevelopmentTeam = 86G3NZTX45;
						ProvisioningStyle = Automatic;
					};
					3AC58FD2263E9EB2009D332B = {
						DevelopmentTeam = 86G3NZTX45;
						ProvisioningStyle = Automatic;
					};
					3AF57C8B263FDF2200C6FC94 = {
						DevelopmentTeam = 7CTDVR4TX3;
						ProvisioningStyle = Automatic;
					};
					3AF57CA7263FDFFC00C6FC94 = {
						DevelopmentTeam = 86G3NZTX45;
						ProvisioningStyle = Automatic;
					};
				};
			};
			buildConfigurationList = 83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "invia_mwallet" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 83CBB9F61A601CBA00E9B192;
			productRefGroup = 83CBBA001A601CBA00E9B192 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				13B07F861A680F5B00A75B9A /* invia_mwallet */,
				00E356ED1AD99517003FC87E /* invia_mwalletTests */,
				2D02E47A1E0B4A5D006451C7 /* invia_mwallet-tvOS */,
				2D02E48F1E0B4A5D006451C7 /* invia_mwallet-tvOSTests */,
				3AC58FD2263E9EB2009D332B /* invia_mwallet_Invia */,
				3AF57C8B263FDF2200C6FC94 /* invia_mwallet_CCS */,
				3AF57CA7263FDFFC00C6FC94 /* invia_mwallet_Voda */,
				3AA5311A2644545900E814C9 /* invia_mwallet_Release */,
				3AC02944265F63D40008FE72 /* invia_mwallet_ICAI */,
				3AC02968265F63F30008FE72 /* invia_mwallet_Suncorp */,
				3A4B08052669D44500873D2D /* invia_mwallet_Amway */,
				0914241B270437FA00038070 /* invia_mwallet_CCS_Prod */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		00E356EC1AD99517003FC87E /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		09142424270437FA00038070 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				6DFF7A91297924A700295F30 /* expcert.cer in Resources */,
				6DFF7A90297924A200295F30 /* mycert.cer in Resources */,
				09142425270437FA00038070 /* GoogleService_Suncorp-Info.plist in Resources */,
				09142426270437FA00038070 /* LaunchScreen_Amway.storyboard in Resources */,
				09142427270437FA00038070 /* Graphik-Medium.ttf in Resources */,
				09142428270437FA00038070 /* Cubano.ttf in Resources */,
				09142429270437FA00038070 /* Graphik-Semibold.ttf in Resources */,
				0914242A270437FA00038070 /* GoogleService_Release-Info.plist in Resources */,
				0914242B270437FA00038070 /* Graphik-Regular.ttf in Resources */,
				0914242C270437FA00038070 /* MarkOT-Heavy.ttf in Resources */,
				0914242D270437FA00038070 /* MarkOT-Medium.ttf in Resources */,
				0914242E270437FA00038070 /* LaunchScreen_Optus.storyboard in Resources */,
				0914242F270437FA00038070 /* LaunchScreen_Dev1.storyboard in Resources */,
				09142430270437FA00038070 /* LaunchScreen_Invia_Release.storyboard in Resources */,
				09142431270437FA00038070 /* GoogleService_Invia-Info.plist in Resources */,
				09142432270437FA00038070 /* GoogleService_Amway-Info.plist in Resources */,
				09142433270437FA00038070 /* MarkOT.ttf in Resources */,
				09142434270437FA00038070 /* LaunchScreen.storyboard in Resources */,
				09142435270437FA00038070 /* LaunchScreen_Suncorp.storyboard in Resources */,
				09142436270437FA00038070 /* GoogleService-Info.plist in Resources */,
				09142437270437FA00038070 /* Images.xcassets in Resources */,
				09142438270437FA00038070 /* Arial-BoldMT.otf in Resources */,
				09142439270437FA00038070 /* ARIAL.TTF in Resources */,
				0914243A270437FA00038070 /* GoogleService_Invia_old-Info.plist in Resources */,
				0914243B270437FA00038070 /* ArialMTStd-Medium.otf in Resources */,
				0914243C270437FA00038070 /* GoogleService_Voda-Info.plist in Resources */,
				095177A52704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F8E1A680F5B00A75B9A /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3ACC65E126652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */,
				3A4B08362669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */,
				3A730777255D7F4000B45110 /* MarkOT-Heavy.ttf in Resources */,
				3A5635AC26544731002C5A7C /* Cubano.ttf in Resources */,
				3A730778255D7F4000B45110 /* MarkOT-Medium.ttf in Resources */,
				3AA5313C2644558200E814C9 /* GoogleService_Release-Info.plist in Resources */,
				3AA77EA026400F6E002AD85E /* LaunchScreen_Dev1.storyboard in Resources */,
				3A730779255D7F4000B45110 /* MarkOT.ttf in Resources */,
				3AC0F0BC2642E46F00BC9694 /* Graphik-Medium.ttf in Resources */,
				09ED8C8D26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */,
				81AB9BB82411601600AC10FF /* LaunchScreen.storyboard in Resources */,
				09ED8C8426AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */,
				3ACC65E92665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */,
				3A4B082D2669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */,
				13B07FBF1A68108700A75B9A /* Images.xcassets in Resources */,
				6F191E4AB13C4AD8AA2778CF /* Arial-BoldMT.otf in Resources */,
				3AC0298D265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */,
				0930E76226B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */,
				3AC0F0B52642D0F800BC9694 /* Graphik-Regular.ttf in Resources */,
				0C480A85936D4428A34DB2F1 /* ARIAL.TTF in Resources */,
				3AC0F0C02642E46F00BC9694 /* Graphik-Semibold.ttf in Resources */,
				3AA77E9B26400C5A002AD85E /* GoogleService_Invia_old-Info.plist in Resources */,
				AB7BCF829CA343E487223586 /* ArialMTStd-Medium.otf in Resources */,
				3AC3DC902556BF50009B2ACD /* GoogleService_Voda-Info.plist in Resources */,
				0951779D2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E4791E0B4A5D006451C7 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2D02E4BD1E0B4A84006451C7 /* Images.xcassets in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E48E1E0B4A5D006451C7 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3A4B080D2669D44500873D2D /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3A4B080E2669D44500873D2D /* GoogleService_Suncorp-Info.plist in Resources */,
				3A4B083D2669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */,
				3A4B080F2669D44500873D2D /* MarkOT-Heavy.ttf in Resources */,
				3A4B08102669D44500873D2D /* Cubano.ttf in Resources */,
				3A4B08112669D44500873D2D /* MarkOT-Medium.ttf in Resources */,
				3A4B08122669D44500873D2D /* GoogleService_Release-Info.plist in Resources */,
				3A4B08132669D44500873D2D /* LaunchScreen_Dev1.storyboard in Resources */,
				3A4B08142669D44500873D2D /* MarkOT.ttf in Resources */,
				3A4B08152669D44500873D2D /* Graphik-Medium.ttf in Resources */,
				09ED8C9426AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */,
				3A4B08162669D44500873D2D /* LaunchScreen.storyboard in Resources */,
				09ED8C8B26AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */,
				3A4B08172669D44500873D2D /* GoogleService_Invia-Info.plist in Resources */,
				3A4B08342669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */,
				3A4B08182669D44500873D2D /* Images.xcassets in Resources */,
				3A4B08192669D44500873D2D /* Arial-BoldMT.otf in Resources */,
				3A4B081B2669D44500873D2D /* LaunchScreen_Suncorp.storyboard in Resources */,
				0930E76926B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */,
				3A4B081C2669D44500873D2D /* Graphik-Regular.ttf in Resources */,
				3A4B081D2669D44500873D2D /* ARIAL.TTF in Resources */,
				3A4B081E2669D44500873D2D /* Graphik-Semibold.ttf in Resources */,
				3A4B081F2669D44500873D2D /* GoogleService_Invia_old-Info.plist in Resources */,
				3A4B08202669D44500873D2D /* ArialMTStd-Medium.otf in Resources */,
				3A4B08212669D44500873D2D /* GoogleService_Voda-Info.plist in Resources */,
				095177A42704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AA531222644545900E814C9 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3ACC65E526652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */,
				3A4B083A2669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */,
				3AA531232644545900E814C9 /* MarkOT-Heavy.ttf in Resources */,
				3A5635B026544731002C5A7C /* Cubano.ttf in Resources */,
				3AA531242644545900E814C9 /* MarkOT-Medium.ttf in Resources */,
				3AA531402644558200E814C9 /* GoogleService_Release-Info.plist in Resources */,
				3AA531252644545900E814C9 /* LaunchScreen_Dev1.storyboard in Resources */,
				3AA531262644545900E814C9 /* MarkOT.ttf in Resources */,
				3AA531272644545900E814C9 /* Graphik-Medium.ttf in Resources */,
				09ED8C9126AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */,
				3AA531282644545900E814C9 /* LaunchScreen.storyboard in Resources */,
				09ED8C8826AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */,
				3ACC65ED2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */,
				3A4B08312669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */,
				3AA531292644545900E814C9 /* Images.xcassets in Resources */,
				3AA5312A2644545900E814C9 /* Arial-BoldMT.otf in Resources */,
				3AC02991265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */,
				0930E76626B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */,
				3AA5312B2644545900E814C9 /* Graphik-Regular.ttf in Resources */,
				3AA5312C2644545900E814C9 /* ARIAL.TTF in Resources */,
				3AA5312E2644545900E814C9 /* Graphik-Semibold.ttf in Resources */,
				3AA5312F2644545900E814C9 /* GoogleService_Invia_old-Info.plist in Resources */,
				3AA531302644545900E814C9 /* ArialMTStd-Medium.otf in Resources */,
				3AA531312644545900E814C9 /* GoogleService_Voda-Info.plist in Resources */,
				095177A12704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AC0294C265F63D40008FE72 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3ACC65E626652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */,
				3A4B083B2669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */,
				3AC0294D265F63D40008FE72 /* MarkOT-Heavy.ttf in Resources */,
				3AC0294E265F63D40008FE72 /* Cubano.ttf in Resources */,
				3AC0294F265F63D40008FE72 /* MarkOT-Medium.ttf in Resources */,
				3AC02950265F63D40008FE72 /* GoogleService_Release-Info.plist in Resources */,
				3AC02951265F63D40008FE72 /* LaunchScreen_Dev1.storyboard in Resources */,
				3AC02952265F63D40008FE72 /* MarkOT.ttf in Resources */,
				3AC02953265F63D40008FE72 /* Graphik-Medium.ttf in Resources */,
				09ED8C9226AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */,
				3AC02954265F63D40008FE72 /* LaunchScreen.storyboard in Resources */,
				09ED8C8926AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */,
				3ACC65EE2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */,
				3A4B08322669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */,
				3AC02955265F63D40008FE72 /* Images.xcassets in Resources */,
				3AC02956265F63D40008FE72 /* Arial-BoldMT.otf in Resources */,
				3AC02992265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */,
				0930E76726B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */,
				3AC02958265F63D40008FE72 /* Graphik-Regular.ttf in Resources */,
				3AC02959265F63D40008FE72 /* ARIAL.TTF in Resources */,
				3AC0295A265F63D40008FE72 /* Graphik-Semibold.ttf in Resources */,
				3AC0295B265F63D40008FE72 /* GoogleService_Invia_old-Info.plist in Resources */,
				3AC0295C265F63D40008FE72 /* ArialMTStd-Medium.otf in Resources */,
				3AC0295D265F63D40008FE72 /* GoogleService_Voda-Info.plist in Resources */,
				095177A22704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AC02970265F63F30008FE72 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3ACC65E726652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */,
				3A4B083C2669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */,
				3AC02971265F63F30008FE72 /* MarkOT-Heavy.ttf in Resources */,
				3AC02972265F63F30008FE72 /* Cubano.ttf in Resources */,
				3AC02973265F63F30008FE72 /* MarkOT-Medium.ttf in Resources */,
				3AC02974265F63F30008FE72 /* GoogleService_Release-Info.plist in Resources */,
				3AC02975265F63F30008FE72 /* LaunchScreen_Dev1.storyboard in Resources */,
				3AC02976265F63F30008FE72 /* MarkOT.ttf in Resources */,
				3AC02977265F63F30008FE72 /* Graphik-Medium.ttf in Resources */,
				09ED8C9326AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */,
				3AC02978265F63F30008FE72 /* LaunchScreen.storyboard in Resources */,
				09ED8C8A26AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */,
				3ACC65EF2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */,
				3A4B08332669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */,
				3AC02979265F63F30008FE72 /* Images.xcassets in Resources */,
				3AC0297A265F63F30008FE72 /* Arial-BoldMT.otf in Resources */,
				3AC02993265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */,
				0930E76826B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */,
				3AC0297C265F63F30008FE72 /* Graphik-Regular.ttf in Resources */,
				3AC0297D265F63F30008FE72 /* ARIAL.TTF in Resources */,
				3AC0297E265F63F30008FE72 /* Graphik-Semibold.ttf in Resources */,
				3AC0297F265F63F30008FE72 /* GoogleService_Invia_old-Info.plist in Resources */,
				3AC02980265F63F30008FE72 /* ArialMTStd-Medium.otf in Resources */,
				3AC02981265F63F30008FE72 /* GoogleService_Voda-Info.plist in Resources */,
				095177A32704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AC58FDA263E9EB2009D332B /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3ACC65E226652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */,
				3A4B08372669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */,
				3AC58FDB263E9EB2009D332B /* MarkOT-Heavy.ttf in Resources */,
				3A5635AD26544731002C5A7C /* Cubano.ttf in Resources */,
				3AC58FDC263E9EB2009D332B /* MarkOT-Medium.ttf in Resources */,
				3AA5313D2644558200E814C9 /* GoogleService_Release-Info.plist in Resources */,
				3AA77EA126400F6E002AD85E /* LaunchScreen_Dev1.storyboard in Resources */,
				3AC58FDD263E9EB2009D332B /* MarkOT.ttf in Resources */,
				3AC0F0BD2642E46F00BC9694 /* Graphik-Medium.ttf in Resources */,
				09ED8C8E26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */,
				3AC58FDE263E9EB2009D332B /* LaunchScreen.storyboard in Resources */,
				09ED8C8526AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */,
				3ACC65EA2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */,
				3A4B082E2669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */,
				3AC58FDF263E9EB2009D332B /* Images.xcassets in Resources */,
				3AC58FE0263E9EB2009D332B /* Arial-BoldMT.otf in Resources */,
				3AC0298E265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */,
				0930E76326B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */,
				3AC0F0B62642D0F800BC9694 /* Graphik-Regular.ttf in Resources */,
				3AC58FE1263E9EB2009D332B /* ARIAL.TTF in Resources */,
				3AC0F0C12642E46F00BC9694 /* Graphik-Semibold.ttf in Resources */,
				3AA77E9C26400C5A002AD85E /* GoogleService_Invia_old-Info.plist in Resources */,
				3AC58FE2263E9EB2009D332B /* ArialMTStd-Medium.otf in Resources */,
				3AC58FE3263E9EB2009D332B /* GoogleService_Voda-Info.plist in Resources */,
				0951779E2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AF57C94263FDF2200C6FC94 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3ACC65E326652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */,
				3A4B08382669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */,
				3AC0F0BE2642E46F00BC9694 /* Graphik-Medium.ttf in Resources */,
				3A5635AE26544731002C5A7C /* Cubano.ttf in Resources */,
				3AC0F0C22642E46F00BC9694 /* Graphik-Semibold.ttf in Resources */,
				3AA5313E2644558200E814C9 /* GoogleService_Release-Info.plist in Resources */,
				3AC0F0B72642D0F800BC9694 /* Graphik-Regular.ttf in Resources */,
				3AF57C95263FDF2200C6FC94 /* MarkOT-Heavy.ttf in Resources */,
				3AF57C96263FDF2200C6FC94 /* MarkOT-Medium.ttf in Resources */,
				09ED8C8F26AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */,
				3AA77EA226400F6E002AD85E /* LaunchScreen_Dev1.storyboard in Resources */,
				09ED8C8626AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */,
				3ACC65EB2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */,
				3A4B082F2669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */,
				3AF57C97263FDF2200C6FC94 /* MarkOT.ttf in Resources */,
				3AF57C98263FDF2200C6FC94 /* LaunchScreen.storyboard in Resources */,
				3AC0298F265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */,
				0930E76426B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */,
				3AF57C99263FDF2200C6FC94 /* Images.xcassets in Resources */,
				3AF57C9A263FDF2200C6FC94 /* Arial-BoldMT.otf in Resources */,
				3AF57C9B263FDF2200C6FC94 /* ARIAL.TTF in Resources */,
				3AA77E9D26400C5A002AD85E /* GoogleService_Invia_old-Info.plist in Resources */,
				3AF57C9C263FDF2200C6FC94 /* ArialMTStd-Medium.otf in Resources */,
				3AF57C9D263FDF2200C6FC94 /* GoogleService_Voda-Info.plist in Resources */,
				0951779F2704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AF57CB0263FDFFC00C6FC94 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3ACC65E426652FD500CCCF84 /* GoogleService_Suncorp-Info.plist in Resources */,
				3A4B08392669DAE300873D2D /* LaunchScreen_Amway.storyboard in Resources */,
				3AF57CB1263FDFFC00C6FC94 /* MarkOT-Heavy.ttf in Resources */,
				3A5635AF26544731002C5A7C /* Cubano.ttf in Resources */,
				3AF57CB2263FDFFC00C6FC94 /* MarkOT-Medium.ttf in Resources */,
				3AA5313F2644558200E814C9 /* GoogleService_Release-Info.plist in Resources */,
				3AA77EA326400F6E002AD85E /* LaunchScreen_Dev1.storyboard in Resources */,
				3AF57CB3263FDFFC00C6FC94 /* MarkOT.ttf in Resources */,
				3AC0F0BF2642E46F00BC9694 /* Graphik-Medium.ttf in Resources */,
				09ED8C9026AEF1DB001DD460 /* LaunchScreen_Optus.storyboard in Resources */,
				3AF57CB4263FDFFC00C6FC94 /* LaunchScreen.storyboard in Resources */,
				09ED8C8726AEF11F001DD460 /* LaunchScreen_Invia_Release.storyboard in Resources */,
				3ACC65EC2665378D00CCCF84 /* GoogleService_Invia-Info.plist in Resources */,
				3A4B08302669D62E00873D2D /* GoogleService_Amway-Info.plist in Resources */,
				3AF57CB5263FDFFC00C6FC94 /* Images.xcassets in Resources */,
				3AF57CB6263FDFFC00C6FC94 /* Arial-BoldMT.otf in Resources */,
				3AC02990265F72250008FE72 /* LaunchScreen_Suncorp.storyboard in Resources */,
				0930E76526B3AC6500F8C0AA /* GoogleService-Info.plist in Resources */,
				3AC0F0B82642D0F800BC9694 /* Graphik-Regular.ttf in Resources */,
				3AF57CB7263FDFFC00C6FC94 /* ARIAL.TTF in Resources */,
				3AC0F0C32642E46F00BC9694 /* Graphik-Semibold.ttf in Resources */,
				3AA77E9E26400C5A002AD85E /* GoogleService_Invia_old-Info.plist in Resources */,
				3AF57CB8263FDFFC00C6FC94 /* ArialMTStd-Medium.otf in Resources */,
				3AF57CB9263FDFFC00C6FC94 /* GoogleService_Voda-Info.plist in Resources */,
				095177A02704464800E42BAF /* GoogleService_CCS_Prod-Info.plist in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		00C5258C120BAE3CE00F4E74 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		0914241C270437FA00038070 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet_CCS_Prod-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		0914241D270437FA00038070 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		0914243D270437FA00038070 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 12;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=/opt/homebrew/bin/node\n";
		};
		0914243E270437FA00038070 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_CCS_Prod/Pods-invia_mwallet_CCS_Prod-resources.sh",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_CCS_Prod/Pods-invia_mwallet_CCS_Prod-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		0914243F270437FA00038070 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		19584529580C99DDA3AC2B47 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet_CCS-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		2366BF6DF5A388DD4B7FF376 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_ICAI/Pods-invia_mwallet_ICAI-resources.sh",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_ICAI/Pods-invia_mwallet_ICAI-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		24FF2E799A6F3B92B94C3D4F /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet/Pods-invia_mwallet-resources.sh",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet/Pods-invia_mwallet-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		2CB82BE3D42CF6AD251D0E95 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet-tvOS-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		2CD23072E0BFB340CC92D89D /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native Code And Images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		2D3A23060D9450FB1BFC8F74 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_Release/Pods-invia_mwallet_Release-resources.sh",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_Release/Pods-invia_mwallet_Release-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		3386B4E7E918C109330A9592 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		3A0900E515076DE88C7F476F /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_Voda/Pods-invia_mwallet_Voda-resources.sh",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_Voda/Pods-invia_mwallet_Voda-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		3A4B08072669D44500873D2D /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		3A4B08222669D44500873D2D /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		3A4B08252669D44500873D2D /* FB Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "FB Configuration";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "
";
		};
		3AA5311C2644545900E814C9 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		3AA531322644545900E814C9 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		3AC02946265F63D40008FE72 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		3AC0295E265F63D40008FE72 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		3AC02961265F63D40008FE72 /* FB Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "FB Configuration";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "
";
		};
		3AC0296A265F63F30008FE72 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		3AC02982265F63F30008FE72 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		3AC02985265F63F30008FE72 /* FB Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "FB Configuration";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "
";
		};
		3AC58FD4263E9EB2009D332B /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		3AC58FE4263E9EB2009D332B /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		3AF57C8D263FDF2200C6FC94 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		3AF57C9E263FDF2200C6FC94 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh\n";
		};
		3AF57CA9263FDFFC00C6FC94 /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		3AF57CBA263FDFFC00C6FC94 /* Bundle React Native code and images */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Bundle React Native code and images";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export NODE_BINARY=node\n../node_modules/react-native/scripts/react-native-xcode.sh";
		};
		3AF57CC3263FF42900C6FC94 /* FB Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "FB Configuration";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "
";
		};
		43B2A50140D77A03EEB4DB71 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet_Invia-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		511B958D0F696DF63ECD750C /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet-invia_mwalletTests/Pods-invia_mwallet-invia_mwalletTests-resources.sh",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet-invia_mwalletTests/Pods-invia_mwallet-invia_mwalletTests-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		51DE93ECF0F21E1D5C061D59 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		6F95E809D740EC3576D3057B /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_Amway/Pods-invia_mwallet_Amway-resources.sh",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_Amway/Pods-invia_mwallet_Amway-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		769856DC345303422084C8C2 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		7E40CB1E969E2C805A39B910 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet_Amway-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		9066A7BDFCE8A2F74A6B6F92 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		9D0D1489EEB67AD35D4E3E47 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet_Release-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		9FC5A797DB6452B233B75AEB /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet-invia_mwalletTests-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		A1B5C8633EE18BF507DEE5DE /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		AB9F42ED2511BEAB7D489304 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet_ICAI-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		B8AC5D83491C1A058AB9B377 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet_Voda-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		BBF65E98A96A8A5749C87839 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet-tvOSTests-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		BD669C7454C2D52C0A4F7C63 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet_Suncorp-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		C7B9B870EB23301CBAB0DB8C /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_CCS/Pods-invia_mwallet_CCS-resources.sh",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_CCS/Pods-invia_mwallet_CCS-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		D4E68A876E3D8D71BBE421F1 /* [CP] Check Pods Manifest.lock */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"${PODS_PODFILE_DIR_PATH}/Podfile.lock",
				"${PODS_ROOT}/Manifest.lock",
			);
			name = "[CP] Check Pods Manifest.lock";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(DERIVED_FILE_DIR)/Pods-invia_mwallet-checkManifestLockResult.txt",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "diff \"${PODS_PODFILE_DIR_PATH}/Podfile.lock\" \"${PODS_ROOT}/Manifest.lock\" > /dev/null\nif [ $? != 0 ] ; then\n    # print error to STDERR\n    echo \"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\" >&2\n    exit 1\nfi\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\necho \"SUCCESS\" > \"${SCRIPT_OUTPUT_FILE_0}\"\n";
			showEnvVarsInLog = 0;
		};
		DB91B74550F0923460FC0B33 /* [CP-User] [RNFB] Core Configuration */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			name = "[CP-User] [RNFB] Core Configuration";
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "#!/usr/bin/env bash\n#\n# Copyright (c) 2016-present Invertase Limited & Contributors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this library except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nset -e\n\n_MAX_LOOKUPS=2;\n_SEARCH_RESULT=''\n_RN_ROOT_EXISTS=''\n_CURRENT_LOOKUPS=1\n_JSON_ROOT=\"'react-native'\"\n_JSON_FILE_NAME='firebase.json'\n_JSON_OUTPUT_BASE64='e30=' # { }\n_CURRENT_SEARCH_DIR=${PROJECT_DIR}\n_PLIST_BUDDY=/usr/libexec/PlistBuddy\n_TARGET_PLIST=\"${BUILT_PRODUCTS_DIR}/${INFOPLIST_PATH}\"\n_DSYM_PLIST=\"${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\"\n\n# plist arrays\n_PLIST_ENTRY_KEYS=()\n_PLIST_ENTRY_TYPES=()\n_PLIST_ENTRY_VALUES=()\n\nfunction setPlistValue {\n  echo \"info:      setting plist entry '$1' of type '$2' in file '$4'\"\n  ${_PLIST_BUDDY} -c \"Add :$1 $2 '$3'\" $4 || echo \"info:      '$1' already exists\"\n}\n\nfunction getFirebaseJsonKeyValue () {\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$1'); puts output[$_JSON_ROOT]['$2']\"\n  else\n    echo \"\"\n  fi;\n}\n\nfunction jsonBoolToYesNo () {\n  if [[ $1 == \"false\" ]]; then\n    echo \"NO\"\n  elif [[ $1 == \"true\" ]]; then\n    echo \"YES\"\n  else echo \"NO\"\n  fi\n}\n\necho \"info: -> RNFB build script started\"\necho \"info: 1) Locating ${_JSON_FILE_NAME} file:\"\n\nif [[ -z ${_CURRENT_SEARCH_DIR} ]]; then\n  _CURRENT_SEARCH_DIR=$(pwd)\nfi;\n\nwhile true; do\n  _CURRENT_SEARCH_DIR=$(dirname \"$_CURRENT_SEARCH_DIR\")\n  if [[ \"$_CURRENT_SEARCH_DIR\" == \"/\" ]] || [[ ${_CURRENT_LOOKUPS} -gt ${_MAX_LOOKUPS} ]]; then break; fi;\n  echo \"info:      ($_CURRENT_LOOKUPS of $_MAX_LOOKUPS) Searching in '$_CURRENT_SEARCH_DIR' for a ${_JSON_FILE_NAME} file.\"\n  _SEARCH_RESULT=$(find \"$_CURRENT_SEARCH_DIR\" -maxdepth 2 -name ${_JSON_FILE_NAME} -print | head -n 1)\n  if [[ ${_SEARCH_RESULT} ]]; then\n    echo \"info:      ${_JSON_FILE_NAME} found at $_SEARCH_RESULT\"\n    break;\n  fi;\n  _CURRENT_LOOKUPS=$((_CURRENT_LOOKUPS+1))\ndone\n\nif [[ ${_SEARCH_RESULT} ]]; then\n  _JSON_OUTPUT_RAW=$(cat \"${_SEARCH_RESULT}\")\n  _RN_ROOT_EXISTS=$(ruby -e \"require 'rubygems';require 'json'; output=JSON.parse('$_JSON_OUTPUT_RAW'); puts output[$_JSON_ROOT]\" || echo '')\n\n  if [[ ${_RN_ROOT_EXISTS} ]]; then\n    _JSON_OUTPUT_BASE64=$(python -c 'import json,sys,base64;print(base64.b64encode(json.dumps(json.loads(open('\"'${_SEARCH_RESULT}'\"').read())['${_JSON_ROOT}'])))' || echo \"e30=\")\n  fi\n\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n\n  # config.analytics_auto_collection_enabled\n  _ANALYTICS_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"analytics_auto_collection_enabled\")\n  if [[ $_ANALYTICS_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FIREBASE_ANALYTICS_COLLECTION_ENABLED\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_ANALYTICS_AUTO_COLLECTION\")\")\n  fi\n\n  # config.perf_auto_collection_enabled\n  _PERF_AUTO_COLLECTION=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"perf_auto_collection_enabled\")\n  if [[ $_PERF_AUTO_COLLECTION ]]; then\n    _PLIST_ENTRY_KEYS+=(\"firebase_performance_collection_enabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_PERF_AUTO_COLLECTION\")\")\n  fi\n\n  # config.messaging_auto_init_enabled\n  _MESSAGING_AUTO_INIT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"messaging_auto_init_enabled\")\n  if [[ $_MESSAGING_AUTO_INIT ]]; then\n    _PLIST_ENTRY_KEYS+=(\"FirebaseMessagingAutoInitEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"$(jsonBoolToYesNo \"$_MESSAGING_AUTO_INIT\")\")\n  fi\n\n  # config.crashlytics_disable_auto_disabler - undocumented for now - mainly for debugging, document if becomes useful\n  _CRASHLYTICS_AUTO_DISABLE_ENABLED=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"crashlytics_disable_auto_disabler\")\n  if [[ $_CRASHLYTICS_AUTO_DISABLE_ENABLED == \"true\" ]]; then\n    echo \"Disabled Crashlytics auto disabler.\" # do nothing\n  else\n    _PLIST_ENTRY_KEYS+=(\"FirebaseCrashlyticsCollectionEnabled\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"NO\")\n  fi\n\n  # config.admob_delay_app_measurement_init\n  _ADMOB_DELAY_APP_MEASUREMENT=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_delay_app_measurement_init\")\n  if [[ $_ADMOB_DELAY_APP_MEASUREMENT == \"true\" ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADDelayAppMeasurementInit\")\n    _PLIST_ENTRY_TYPES+=(\"bool\")\n    _PLIST_ENTRY_VALUES+=(\"YES\")\n  fi\n\n  # config.admob_ios_app_id\n  _ADMOB_IOS_APP_ID=$(getFirebaseJsonKeyValue \"$_JSON_OUTPUT_RAW\" \"admob_ios_app_id\")\n  if [[ $_ADMOB_IOS_APP_ID ]]; then\n    _PLIST_ENTRY_KEYS+=(\"GADApplicationIdentifier\")\n    _PLIST_ENTRY_TYPES+=(\"string\")\n    _PLIST_ENTRY_VALUES+=(\"$_ADMOB_IOS_APP_ID\")\n  fi\nelse\n  _PLIST_ENTRY_KEYS+=(\"firebase_json_raw\")\n  _PLIST_ENTRY_TYPES+=(\"string\")\n  _PLIST_ENTRY_VALUES+=(\"$_JSON_OUTPUT_BASE64\")\n  echo \"warning:   A firebase.json file was not found, whilst this file is optional it is recommended to include it to configure firebase services in React Native Firebase.\"\nfi;\n\necho \"info: 2) Injecting Info.plist entries: \"\n\n# Log out the keys we're adding\nfor i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n  echo \"    ->  $i) ${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\"\ndone\n\nfor plist in \"${_TARGET_PLIST}\" \"${_DSYM_PLIST}\" ; do\n  if [[ -f \"${plist}\" ]]; then\n\n    # paths with spaces break the call to setPlistValue. temporarily modify\n    # the shell internal field separator variable (IFS), which normally\n    # includes spaces, to consist only of line breaks\n    oldifs=$IFS\n    IFS=\"\n\"\n\n    for i in \"${!_PLIST_ENTRY_KEYS[@]}\"; do\n      setPlistValue \"${_PLIST_ENTRY_KEYS[$i]}\" \"${_PLIST_ENTRY_TYPES[$i]}\" \"${_PLIST_ENTRY_VALUES[$i]}\" \"${plist}\"\n    done\n\n    # restore the original internal field separator value\n    IFS=$oldifs\n  else\n    echo \"warning:   A Info.plist build output file was not found (${plist})\"\n  fi\ndone\n\necho \"info: <- RNFB build script finished\"\n";
		};
		FD10A7F022414F080027D42C /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		FD10A7F122414F3F0027D42C /* Start Packager */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Start Packager";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "export RCT_METRO_PORT=\"${RCT_METRO_PORT:=8081}\"\necho \"export RCT_METRO_PORT=${RCT_METRO_PORT}\" > \"${SRCROOT}/../node_modules/react-native/scripts/.packager.env\"\nif [ -z \"${RCT_NO_LAUNCH_PACKAGER+xxx}\" ] ; then\n  if nc -w 5 -z localhost ${RCT_METRO_PORT} ; then\n    if ! curl -s \"http://localhost:${RCT_METRO_PORT}/status\" | grep -q \"packager-status:running\" ; then\n      echo \"Port ${RCT_METRO_PORT} already in use, packager is either not running or not running correctly\"\n      exit 2\n    fi\n  else\n    open \"$SRCROOT/../node_modules/react-native/scripts/launchPackager.command\" || echo \"Can't start packager automatically\"\n  fi\nfi\n";
			showEnvVarsInLog = 0;
		};
		FE4849AC809801EF511E496B /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_Invia/Pods-invia_mwallet_Invia-resources.sh",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_Invia/Pods-invia_mwallet_Invia-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
		FEF3CC85FC8047B84B087FB5 /* [CP] Copy Pods Resources */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_Suncorp/Pods-invia_mwallet_Suncorp-resources.sh",
				"${PODS_CONFIGURATION_BUILD_DIR}/RNImageCropPicker/QBImagePicker.bundle",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/AntDesign.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Entypo.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/EvilIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Feather.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Brands.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Regular.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/FontAwesome5_Solid.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Fontisto.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Foundation.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Ionicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/MaterialIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Octicons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/SimpleLineIcons.ttf",
				"${PODS_ROOT}/../../node_modules/react-native-vector-icons/Fonts/Zocial.ttf",
				"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle",
				"${PODS_CONFIGURATION_BUILD_DIR}/TOCropViewController/TOCropViewControllerBundle.bundle",
			);
			name = "[CP] Copy Pods Resources";
			outputPaths = (
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/QBImagePicker.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AntDesign.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Entypo.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/EvilIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Feather.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Brands.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Regular.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/FontAwesome5_Solid.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Fontisto.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Foundation.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Ionicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialCommunityIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/MaterialIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Octicons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/SimpleLineIcons.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/Zocial.ttf",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle",
				"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/TOCropViewControllerBundle.bundle",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"${PODS_ROOT}/Target Support Files/Pods-invia_mwallet_Suncorp/Pods-invia_mwallet_Suncorp-resources.sh\"\n";
			showEnvVarsInLog = 0;
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		00E356EA1AD99517003FC87E /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				00E356F31AD99517003FC87E /* invia_mwalletTests.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		0914241E270437FA00038070 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				0914241F270437FA00038070 /* AppDelegate.m in Sources */,
				09142420270437FA00038070 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		13B07F871A680F5B00A75B9A /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				13B07FBC1A68108700A75B9A /* AppDelegate.m in Sources */,
				13B07FC11A68108700A75B9A /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E4771E0B4A5D006451C7 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2D02E4BF1E0B4AB3006451C7 /* main.m in Sources */,
				2D02E4BC1E0B4A80006451C7 /* AppDelegate.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		2D02E48C1E0B4A5D006451C7 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				2DCD954D1E0B4F2C00145EB5 /* invia_mwalletTests.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3A4B08082669D44500873D2D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3A4B08092669D44500873D2D /* AppDelegate.m in Sources */,
				3A4B080A2669D44500873D2D /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AA5311D2644545900E814C9 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3AA5311E2644545900E814C9 /* AppDelegate.m in Sources */,
				3AA5311F2644545900E814C9 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AC02947265F63D40008FE72 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3AC02948265F63D40008FE72 /* AppDelegate.m in Sources */,
				3AC02949265F63D40008FE72 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AC0296B265F63F30008FE72 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3AC0296C265F63F30008FE72 /* AppDelegate.m in Sources */,
				3AC0296D265F63F30008FE72 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AC58FD5263E9EB2009D332B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3AC58FD6263E9EB2009D332B /* AppDelegate.m in Sources */,
				3AC58FD7263E9EB2009D332B /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AF57C8E263FDF2200C6FC94 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3AF57C8F263FDF2200C6FC94 /* AppDelegate.m in Sources */,
				3AF57C90263FDF2200C6FC94 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		3AF57CAA263FDFFC00C6FC94 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3AF57CAB263FDFFC00C6FC94 /* AppDelegate.m in Sources */,
				3AF57CAC263FDFFC00C6FC94 /* main.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		00E356F51AD99517003FC87E /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 13B07F861A680F5B00A75B9A /* invia_mwallet */;
			targetProxy = 00E356F41AD99517003FC87E /* PBXContainerItemProxy */;
		};
		2D02E4921E0B4A5D006451C7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 2D02E47A1E0B4A5D006451C7 /* invia_mwallet-tvOS */;
			targetProxy = 2D02E4911E0B4A5D006451C7 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		00E356F61AD99517003FC87E /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 1FAE3341F91C32551DFB93F6 /* Pods-invia_mwallet-invia_mwalletTests.debug.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = invia_mwalletTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"-ObjC",
					"-lc++",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/invia_mwallet.app/invia_mwallet";
			};
			name = Debug;
		};
		00E356F71AD99517003FC87E /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = E87586AA75740D5C911D0AC8 /* Pods-invia_mwallet-invia_mwalletTests.release.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				COPY_PHASE_STRIP = NO;
				INFOPLIST_FILE = invia_mwalletTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"-ObjC",
					"-lc++",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/invia_mwallet.app/invia_mwallet";
			};
			name = Release;
		};
		09142441270437FA00038070 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = B11F25B2D2C471AD5BA5D777 /* Pods-invia_mwallet_CCS_Prod.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_CCS;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1.0.4;
				DEVELOPMENT_TEAM = 7CTDVR4TX3;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_CCS_Prod-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 1.0.4;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.ccs.rewards;
				PRODUCT_NAME = "$(TARGET_NAME)";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		09142442270437FA00038070 /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = A6398F4F26617A1896D79CCB /* Pods-invia_mwallet_CCS_Prod.dev.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_CCS;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1.0.4;
				DEVELOPMENT_TEAM = 7CTDVR4TX3;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_CCS_Prod-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 1.0.4;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.ccs.rewards;
				PRODUCT_NAME = "$(TARGET_NAME)";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Dev;
		};
		09142443270437FA00038070 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = E3F60E2905CF76555B086FA2 /* Pods-invia_mwallet_CCS_Prod.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_CCS;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1.0.4;
				DEVELOPMENT_TEAM = 7CTDVR4TX3;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_CCS_Prod-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 1.0.4;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.ccs.rewards;
				PRODUCT_NAME = "$(TARGET_NAME)";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		13B07F941A680F5B00A75B9A /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = AA7B5B7B5FCDF52F5A034BAE /* Pods-invia_mwallet.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = invia_mwallet/Info.plist;
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet;
				PRODUCT_NAME = mWallet;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		13B07F951A680F5B00A75B9A /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = C83E881AC79B7AA4DFE48BCE /* Pods-invia_mwallet.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = invia_mwallet/Info.plist;
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet;
				PRODUCT_NAME = mWallet;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		2D02E4971E0B4A5E006451C7 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = F5BAFC31FA4C15AC636F521C /* Pods-invia_mwallet-tvOS.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_TESTABILITY = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				INFOPLIST_FILE = "invia_mwallet-tvOS/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.invia_mwallet-tvOS";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = appletvos;
				TARGETED_DEVICE_FAMILY = 3;
				TVOS_DEPLOYMENT_TARGET = 10.0;
			};
			name = Debug;
		};
		2D02E4981E0B4A5E006451C7 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = B1E201304F7F9E274AB44A25 /* Pods-invia_mwallet-tvOS.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				GCC_NO_COMMON_BLOCKS = YES;
				INFOPLIST_FILE = "invia_mwallet-tvOS/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.invia_mwallet-tvOS";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = appletvos;
				TARGETED_DEVICE_FAMILY = 3;
				TVOS_DEPLOYMENT_TARGET = 10.0;
			};
			name = Release;
		};
		2D02E4991E0B4A5E006451C7 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = AEFFAA9651F6AC5150A8B1BA /* Pods-invia_mwallet-tvOSTests.debug.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_TESTABILITY = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				INFOPLIST_FILE = "invia_mwallet-tvOSTests/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.invia_mwallet-tvOSTests";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = appletvos;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/invia_mwallet-tvOS.app/invia_mwallet-tvOS";
				TVOS_DEPLOYMENT_TARGET = 10.1;
			};
			name = Debug;
		};
		2D02E49A1E0B4A5E006451C7 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 1B24AF7AD364765DDF71EB00 /* Pods-invia_mwallet-tvOSTests.release.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				GCC_NO_COMMON_BLOCKS = YES;
				INFOPLIST_FILE = "invia_mwallet-tvOSTests/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.invia_mwallet-tvOSTests";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = appletvos;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/invia_mwallet-tvOS.app/invia_mwallet-tvOS";
				TVOS_DEPLOYMENT_TARGET = 10.1;
			};
			name = Release;
		};
		3A4B08272669D44500873D2D /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 3B1BD435361E24037FF87635 /* Pods-invia_mwallet_Amway.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_amway;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Amway-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev3;
				PRODUCT_NAME = "Amway Rewards";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		3A4B08282669D44500873D2D /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = A982A079A1D3952FF65EAC76 /* Pods-invia_mwallet_Amway.dev.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_amway;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Amway-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev3;
				PRODUCT_NAME = "Amway Rewards";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Dev;
		};
		3A4B08292669D44500873D2D /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 912711043AE658045816E7BE /* Pods-invia_mwallet_Amway.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_amway;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Amway-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev3;
				PRODUCT_NAME = "Amway Rewards";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		3AA531362644545900E814C9 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 1CC9F3B7E3D9655496A906D2 /* Pods-invia_mwallet_Release.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_Invia;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Release-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.release;
				PRODUCT_NAME = mWalletProd;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		3AA531372644545900E814C9 /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 82E01E4D16341C754A677445 /* Pods-invia_mwallet_Release.dev.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_Invia;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Release-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.release;
				PRODUCT_NAME = mWalletProd;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Dev;
		};
		3AA531382644545900E814C9 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = D6ED030C7A270C6F5D672D6F /* Pods-invia_mwallet_Release.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_Invia;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Release-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.release;
				PRODUCT_NAME = mWalletProd;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		3AC02963265F63D40008FE72 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 2B4A4EBA37A01E4D3843814A /* Pods-invia_mwallet_ICAI.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_icai;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Icai-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev1;
				PRODUCT_NAME = "ICAI Rewards";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		3AC02964265F63D40008FE72 /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 75D1F9B13AB64FDF20071D21 /* Pods-invia_mwallet_ICAI.dev.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_icai;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Icai-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev1;
				PRODUCT_NAME = "ICAI Rewards";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Dev;
		};
		3AC02965265F63D40008FE72 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 2013935759344CAEA5AA678C /* Pods-invia_mwallet_ICAI.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_icai;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Icai-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev1;
				PRODUCT_NAME = "ICAI Rewards";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		3AC02987265F63F30008FE72 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 831BACA55463C77AC1A265CC /* Pods-invia_mwallet_Suncorp.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_suncorp;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Suncorp-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev2;
				PRODUCT_NAME = "Suncorp Rewards";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		3AC02988265F63F30008FE72 /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 11BAD383E74866879BB61B69 /* Pods-invia_mwallet_Suncorp.dev.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_suncorp;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Suncorp-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev2;
				PRODUCT_NAME = "Suncorp Rewards";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Dev;
		};
		3AC02989265F63F30008FE72 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 5B698E883314DEE8D2C4729D /* Pods-invia_mwallet_Suncorp.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_suncorp;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Suncorp-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev2;
				PRODUCT_NAME = "Suncorp Rewards";
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		3AC58FE8263E9EB2009D332B /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 9109C66E77D6A3F1BE69272F /* Pods-invia_mwallet_Invia.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_Invia;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Invia-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev1;
				PRODUCT_NAME = Invia;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		3AC58FE9263E9EB2009D332B /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = F93D51A8D85C569C0048A858 /* Pods-invia_mwallet_Invia.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_Invia;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Invia-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev1;
				PRODUCT_NAME = Invia;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		3AC58FEC263EA8B3009D332B /* Dev */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				ENABLE_BITCODE = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LD_RUNPATH_SEARCH_PATHS = "/usr/lib/swift $(inherited)";
				LIBRARY_SEARCH_PATHS = (
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
			};
			name = Dev;
		};
		3AC58FED263EA8B3009D332B /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 954096A407B09121AC5A621F /* Pods-invia_mwallet.dev.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = invia_mwallet/Info.plist;
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet;
				PRODUCT_NAME = mWallet;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Dev;
		};
		3AC58FEE263EA8B3009D332B /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 7D1C8CDF9253F2DE325F6749 /* Pods-invia_mwallet-invia_mwalletTests.dev.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				INFOPLIST_FILE = invia_mwalletTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"-ObjC",
					"-lc++",
					"$(inherited)",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.$(PRODUCT_NAME:rfc1034identifier)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/invia_mwallet.app/invia_mwallet";
			};
			name = Dev;
		};
		3AC58FEF263EA8B3009D332B /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 740F8FAF9DFC5754101251B3 /* Pods-invia_mwallet-tvOS.dev.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = "App Icon & Top Shelf Image";
				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_TESTABILITY = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				INFOPLIST_FILE = "invia_mwallet-tvOS/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.invia_mwallet-tvOS";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = appletvos;
				TARGETED_DEVICE_FAMILY = 3;
				TVOS_DEPLOYMENT_TARGET = 10.0;
			};
			name = Dev;
		};
		3AC58FF0263EA8B3009D332B /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 0F038248446B36A23751AA18 /* Pods-invia_mwallet-tvOSTests.dev.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_TESTABILITY = YES;
				GCC_NO_COMMON_BLOCKS = YES;
				INFOPLIST_FILE = "invia_mwallet-tvOSTests/Info.plist";
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = "org.reactjs.native.example.invia_mwallet-tvOSTests";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = appletvos;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/invia_mwallet-tvOS.app/invia_mwallet-tvOS";
				TVOS_DEPLOYMENT_TARGET = 10.1;
			};
			name = Dev;
		};
		3AC58FF1263EA8B3009D332B /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 5DD2395D388781D47FC16964 /* Pods-invia_mwallet_Invia.dev.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_Invia;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Invia-Info.plist";
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev1;
				PRODUCT_NAME = Invia;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Dev;
		};
		3AF57CA2263FDF2200C6FC94 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 7CDF0F32CCB557A73AF5EF63 /* Pods-invia_mwallet_CCS.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_CCS;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 4.0;
				DEVELOPMENT_TEAM = 7CTDVR4TX3;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_CCS-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 4.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev;
				PRODUCT_NAME = CCS;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		3AF57CA3263FDF2200C6FC94 /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 8F16F8AA9C57837A6B415FB2 /* Pods-invia_mwallet_CCS.dev.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_CCS;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 4.0;
				DEVELOPMENT_TEAM = 7CTDVR4TX3;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_CCS-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 4.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev;
				PRODUCT_NAME = CCS;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Dev;
		};
		3AF57CA4263FDF2200C6FC94 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 43797D7D2B13E26B9F889500 /* Pods-invia_mwallet_CCS.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_CCS;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 4.0;
				DEVELOPMENT_TEAM = 7CTDVR4TX3;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_CCS-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 4.0;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev;
				PRODUCT_NAME = CCS;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		3AF57CBE263FDFFC00C6FC94 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 50604B6297C6102F6A95630B /* Pods-invia_mwallet_Voda.debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_Voda;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Voda-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev1;
				PRODUCT_NAME = Vodafone;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		3AF57CBF263FDFFC00C6FC94 /* Dev */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 64C894CB8F30009058451757 /* Pods-invia_mwallet_Voda.dev.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_Voda;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Voda-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev1;
				PRODUCT_NAME = Vodafone;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Dev;
		};
		3AF57CC0263FDFFC00C6FC94 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = BBC5E7E6DC06818A65D9CA5C /* Pods-invia_mwallet_Voda.release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon_Voda;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = invia_mwallet/invia_mwallet.entitlements;
				CODE_SIGN_IDENTITY = "Apple Development";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 3.11;
				DEVELOPMENT_TEAM = 86G3NZTX45;
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = "invia_mwallet_Voda-Info.plist";
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @executable_path/Frameworks";
				MARKETING_VERSION = 3.11;
				OTHER_LDFLAGS = (
					"$(inherited)",
					"-ObjC",
					"-lc++",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.invia.mwallet.dev1;
				PRODUCT_NAME = Vodafone;
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
		83CBBA201A601CBA00E9B192 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				ENABLE_BITCODE = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_SYMBOLS_PRIVATE_EXTERN = NO;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LD_RUNPATH_SEARCH_PATHS = "/usr/lib/swift $(inherited)";
				LIBRARY_SEARCH_PATHS = (
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		83CBBA211A601CBA00E9B192 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = YES;
				ENABLE_BITCODE = NO;
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				INFOPLIST_OTHER_PREPROCESSOR_FLAGS = "-traditional";
				INFOPLIST_PREFIX_HEADER = "${BUILD_DIR}/GeneratedInfoPlistDotEnv.h";
				INFOPLIST_PREPROCESS = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 10.0;
				LD_RUNPATH_SEARCH_PATHS = "/usr/lib/swift $(inherited)";
				LIBRARY_SEARCH_PATHS = (
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift/$(PLATFORM_NAME)\"",
					"\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"",
					"\"$(inherited)\"",
				);
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		00E357021AD99517003FC87E /* Build configuration list for PBXNativeTarget "invia_mwalletTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				00E356F61AD99517003FC87E /* Debug */,
				3AC58FEE263EA8B3009D332B /* Dev */,
				00E356F71AD99517003FC87E /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		09142440270437FA00038070 /* Build configuration list for PBXNativeTarget "invia_mwallet_CCS_Prod" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				09142441270437FA00038070 /* Debug */,
				09142442270437FA00038070 /* Dev */,
				09142443270437FA00038070 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		13B07F931A680F5B00A75B9A /* Build configuration list for PBXNativeTarget "invia_mwallet" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				13B07F941A680F5B00A75B9A /* Debug */,
				3AC58FED263EA8B3009D332B /* Dev */,
				13B07F951A680F5B00A75B9A /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		2D02E4BA1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "invia_mwallet-tvOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2D02E4971E0B4A5E006451C7 /* Debug */,
				3AC58FEF263EA8B3009D332B /* Dev */,
				2D02E4981E0B4A5E006451C7 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		2D02E4BB1E0B4A5E006451C7 /* Build configuration list for PBXNativeTarget "invia_mwallet-tvOSTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				2D02E4991E0B4A5E006451C7 /* Debug */,
				3AC58FF0263EA8B3009D332B /* Dev */,
				2D02E49A1E0B4A5E006451C7 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		3A4B08262669D44500873D2D /* Build configuration list for PBXNativeTarget "invia_mwallet_Amway" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3A4B08272669D44500873D2D /* Debug */,
				3A4B08282669D44500873D2D /* Dev */,
				3A4B08292669D44500873D2D /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		3AA531352644545900E814C9 /* Build configuration list for PBXNativeTarget "invia_mwallet_Release" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3AA531362644545900E814C9 /* Debug */,
				3AA531372644545900E814C9 /* Dev */,
				3AA531382644545900E814C9 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		3AC02962265F63D40008FE72 /* Build configuration list for PBXNativeTarget "invia_mwallet_ICAI" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3AC02963265F63D40008FE72 /* Debug */,
				3AC02964265F63D40008FE72 /* Dev */,
				3AC02965265F63D40008FE72 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		3AC02986265F63F30008FE72 /* Build configuration list for PBXNativeTarget "invia_mwallet_Suncorp" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3AC02987265F63F30008FE72 /* Debug */,
				3AC02988265F63F30008FE72 /* Dev */,
				3AC02989265F63F30008FE72 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		3AC58FE7263E9EB2009D332B /* Build configuration list for PBXNativeTarget "invia_mwallet_Invia" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3AC58FE8263E9EB2009D332B /* Debug */,
				3AC58FF1263EA8B3009D332B /* Dev */,
				3AC58FE9263E9EB2009D332B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		3AF57CA1263FDF2200C6FC94 /* Build configuration list for PBXNativeTarget "invia_mwallet_CCS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3AF57CA2263FDF2200C6FC94 /* Debug */,
				3AF57CA3263FDF2200C6FC94 /* Dev */,
				3AF57CA4263FDF2200C6FC94 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		3AF57CBD263FDFFC00C6FC94 /* Build configuration list for PBXNativeTarget "invia_mwallet_Voda" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				3AF57CBE263FDFFC00C6FC94 /* Debug */,
				3AF57CBF263FDFFC00C6FC94 /* Dev */,
				3AF57CC0263FDFFC00C6FC94 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		83CBB9FA1A601CBA00E9B192 /* Build configuration list for PBXProject "invia_mwallet" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				83CBBA201A601CBA00E9B192 /* Debug */,
				3AC58FEC263EA8B3009D332B /* Dev */,
				83CBBA211A601CBA00E9B192 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 83CBB9F71A601CBA00E9B192 /* Project object */;
}
